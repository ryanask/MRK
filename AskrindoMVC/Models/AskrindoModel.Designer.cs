//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_CauseTypes_CauseGroups", "CauseGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.CauseGroup), "CauseTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.CauseType), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Causes_CauseTypes", "CauseTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.CauseType), "Causes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Cause), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_EffectTypes_EffectGroups", "EffectGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.EffectGroup), "EffectTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.EffectType), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Effects_EffectTypes", "EffectTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.EffectType), "Effects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Effect), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskGroups_RiskCats", "RiskCats", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.RiskCat), "RiskGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskGroup), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskTypes_RiskGroups", "RiskGroups", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.RiskGroup), "RiskTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskType), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_ImpactTypes_ImpactCats", "ImpactCat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.ImpactCat), "ImpactType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.ImpactType), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_ImpactDetails_ImpactLevels", "ImpactLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.ImpactLevel), "ImpactDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.ImpactDetail), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_ImpactDetails_ImpactTypes", "ImpactType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.ImpactType), "ImpactDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.ImpactDetail), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_MitigationTypes_MitigationCats", "MitigationCat", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.MitigationCat), "MitigationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.MitigationType), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_UserInfos_aspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.aspnet_User), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.UserInfo), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_UserInfos_Depts", "Dept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Dept), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.UserInfo), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK__aspnet_Me__UserI__22AA2996", "aspnet_User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.aspnet_User), "aspnet_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.aspnet_Membership), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskProbs_Freqs", "Freq", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Freq), "RiskProb", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskProb), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskProbs_ProbLevels", "ProbLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.ProbLevel), "RiskProb", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskProb), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskImpacts_ImpactLevels", "ImpactLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.ImpactLevel), "RiskImpact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskImpact), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_ImpactDetails", "ImpactDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.ImpactDetail), "RiskNonMoneyImpact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskNonMoneyImpact), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_ImpactLevels", "ImpactLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.ImpactLevel), "RiskNonMoneyImpact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskNonMoneyImpact), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_ImpactTypes", "ImpactType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.ImpactType), "RiskNonMoneyImpact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskNonMoneyImpact), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_CauseGroups", "CauseGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.CauseGroup), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_Causes", "Cause", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Cause), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_CauseTypes", "CauseType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.CauseType), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskApprovals_Depts", "Dept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Dept), "RiskApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_Depts", "Dept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Dept), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_EffectGroups", "EffectGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.EffectGroup), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_Effects", "Effect", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Effect), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_EffectTypes", "EffectType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.EffectType), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_ImpactLevels", "ImpactLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.ImpactLevel), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_ProbLevels", "ProbLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.ProbLevel), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskApprovals_Risks", "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Risk), "RiskApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskApprovals_UserInfos", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.UserInfo), "RiskApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskAttachments_Risks", "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Risk), "RiskAttachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskAttachment), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_RiskCats", "RiskCat", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.RiskCat), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_RiskGroups", "RiskGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.RiskGroup), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskImpacts_Risks", "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Risk), "RiskImpact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.RiskImpact), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_Risks", "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Risk), "RiskNonMoneyImpact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskNonMoneyImpact), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskProbs_Risks", "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Risk), "RiskProb", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.RiskProb), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_RiskTypes", "RiskType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.RiskType), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_UserInfos", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.UserInfo), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_SubDepts_Depts", "Dept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Dept), "SubDept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.SubDept), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskApprovals_SubDepts", "SubDept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.SubDept), "RiskApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_SubDepts", "SubDept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.SubDept), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_UserInfos_SubDepts", "SubDept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.SubDept), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.UserInfo), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Divisions_Depts", "Dept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Dept), "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Division), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskApprovals_Divisions", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Division), "RiskApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_Divisions", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Division), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_SubDivs_Divisions", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Division), "SubDiv", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.SubDiv), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_UserInfos_Divisions", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Division), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.UserInfo), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskApprovals_SubDivs", "SubDiv", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.SubDiv), "RiskApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_SubDivs", "SubDiv", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.SubDiv), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_UserInfos_SubDivs", "SubDiv", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.SubDiv), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.UserInfo), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Branches_BranchClasses", "BranchClass", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.BranchClass), "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Branch), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Branches_Depts", "Dept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Dept), "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Branch), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskApprovals_Branches", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Branch), "RiskApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_Branches", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Branch), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_UserInfos_Branches", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.Branch), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.UserInfo), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_SubBranches_Branches", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Branch), "SubBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.SubBranch), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskApprovals_SubBranches", "SubBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.SubBranch), "RiskApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_SubBranches", "SubBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.SubBranch), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_UserInfos_SubBranches", "SubBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.SubBranch), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.UserInfo), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_BizUnits_Branches", "Branch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Branch), "BizUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.BizUnit), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskApprovals_BizUnits", "BizUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.BizUnit), "RiskApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Risks_BizUnits", "BizUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.BizUnit), "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.Risk), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_UserInfos_BizUnits", "BizUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.BizUnit), "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.UserInfo), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskStates_ImpactLevels", "ImpactLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.ImpactLevel), "RiskState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskState), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskStates_ProbLevels", "ProbLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.ProbLevel), "RiskState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskState), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskStates_Risks", "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Risk), "RiskState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskState), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_MitigationApprovals_UserInfos", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.UserInfo), "MitigationApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.MitigationApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskMitigations_ImpactLevels", "ImpactLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.ImpactLevel), "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskMitigation), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_MitigationApprovals_RiskMitigations", "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.RiskMitigation), "MitigationApproval", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.MitigationApproval), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_MitigationAttachments_RiskMitigations", "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.RiskMitigation), "MitigationAttachment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.MitigationAttachment), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskMitigations_MitigationCats", "MitigationCat", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.MitigationCat), "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskMitigation), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskMitigations_MitigationTypes", "MitigationType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.MitigationType), "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskMitigation), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskMitigations_ProbLevels", "ProbLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.ProbLevel), "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskMitigation), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskMitigations_Risks", "Risk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Risk), "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskMitigation), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskMitigations_UserInfos", "UserInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.UserInfo), "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskMitigation), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_RiskStates_RiskMitigations", "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AskrindoMVC.Models.RiskMitigation), "RiskState", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.RiskState), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_HelpDocs_HelpMenus", "HelpMenu", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.HelpMenu), "HelpDoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.HelpDoc), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Mitigationunit2", "Division", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.Division), "MitigationUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.MitigationUnit), true)]
[assembly: EdmRelationshipAttribute("AskrindoMVCModel", "FK_Mitigationunit1", "RiskMitigation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AskrindoMVC.Models.RiskMitigation), "MitigationUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AskrindoMVC.Models.MitigationUnit), true)]

#endregion

namespace AskrindoMVC.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AskrindoMVCEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AskrindoMVCEntities object using the connection string found in the 'AskrindoMVCEntities' section of the application configuration file.
        /// </summary>
        public AskrindoMVCEntities() : base("name=AskrindoMVCEntities", "AskrindoMVCEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AskrindoMVCEntities object.
        /// </summary>
        public AskrindoMVCEntities(string connectionString) : base(connectionString, "AskrindoMVCEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AskrindoMVCEntities object.
        /// </summary>
        public AskrindoMVCEntities(EntityConnection connection) : base(connection, "AskrindoMVCEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_User> aspnet_User
        {
            get
            {
                if ((_aspnet_User == null))
                {
                    _aspnet_User = base.CreateObjectSet<aspnet_User>("aspnet_User");
                }
                return _aspnet_User;
            }
        }
        private ObjectSet<aspnet_User> _aspnet_User;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CauseGroup> CauseGroups
        {
            get
            {
                if ((_CauseGroups == null))
                {
                    _CauseGroups = base.CreateObjectSet<CauseGroup>("CauseGroups");
                }
                return _CauseGroups;
            }
        }
        private ObjectSet<CauseGroup> _CauseGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cause> Causes
        {
            get
            {
                if ((_Causes == null))
                {
                    _Causes = base.CreateObjectSet<Cause>("Causes");
                }
                return _Causes;
            }
        }
        private ObjectSet<Cause> _Causes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CauseType> CauseTypes
        {
            get
            {
                if ((_CauseTypes == null))
                {
                    _CauseTypes = base.CreateObjectSet<CauseType>("CauseTypes");
                }
                return _CauseTypes;
            }
        }
        private ObjectSet<CauseType> _CauseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EffectGroup> EffectGroups
        {
            get
            {
                if ((_EffectGroups == null))
                {
                    _EffectGroups = base.CreateObjectSet<EffectGroup>("EffectGroups");
                }
                return _EffectGroups;
            }
        }
        private ObjectSet<EffectGroup> _EffectGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Effect> Effects
        {
            get
            {
                if ((_Effects == null))
                {
                    _Effects = base.CreateObjectSet<Effect>("Effects");
                }
                return _Effects;
            }
        }
        private ObjectSet<Effect> _Effects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EffectType> EffectTypes
        {
            get
            {
                if ((_EffectTypes == null))
                {
                    _EffectTypes = base.CreateObjectSet<EffectType>("EffectTypes");
                }
                return _EffectTypes;
            }
        }
        private ObjectSet<EffectType> _EffectTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskCat> RiskCats
        {
            get
            {
                if ((_RiskCats == null))
                {
                    _RiskCats = base.CreateObjectSet<RiskCat>("RiskCats");
                }
                return _RiskCats;
            }
        }
        private ObjectSet<RiskCat> _RiskCats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskGroup> RiskGroups
        {
            get
            {
                if ((_RiskGroups == null))
                {
                    _RiskGroups = base.CreateObjectSet<RiskGroup>("RiskGroups");
                }
                return _RiskGroups;
            }
        }
        private ObjectSet<RiskGroup> _RiskGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskType> RiskTypes
        {
            get
            {
                if ((_RiskTypes == null))
                {
                    _RiskTypes = base.CreateObjectSet<RiskType>("RiskTypes");
                }
                return _RiskTypes;
            }
        }
        private ObjectSet<RiskType> _RiskTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Dept> Depts
        {
            get
            {
                if ((_Depts == null))
                {
                    _Depts = base.CreateObjectSet<Dept>("Depts");
                }
                return _Depts;
            }
        }
        private ObjectSet<Dept> _Depts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BranchClass> BranchClasses
        {
            get
            {
                if ((_BranchClasses == null))
                {
                    _BranchClasses = base.CreateObjectSet<BranchClass>("BranchClasses");
                }
                return _BranchClasses;
            }
        }
        private ObjectSet<BranchClass> _BranchClasses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProbLevel> ProbLevels
        {
            get
            {
                if ((_ProbLevels == null))
                {
                    _ProbLevels = base.CreateObjectSet<ProbLevel>("ProbLevels");
                }
                return _ProbLevels;
            }
        }
        private ObjectSet<ProbLevel> _ProbLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImpactLevel> ImpactLevels
        {
            get
            {
                if ((_ImpactLevels == null))
                {
                    _ImpactLevels = base.CreateObjectSet<ImpactLevel>("ImpactLevels");
                }
                return _ImpactLevels;
            }
        }
        private ObjectSet<ImpactLevel> _ImpactLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImpactCat> ImpactCats
        {
            get
            {
                if ((_ImpactCats == null))
                {
                    _ImpactCats = base.CreateObjectSet<ImpactCat>("ImpactCats");
                }
                return _ImpactCats;
            }
        }
        private ObjectSet<ImpactCat> _ImpactCats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImpactDetail> ImpactDetails
        {
            get
            {
                if ((_ImpactDetails == null))
                {
                    _ImpactDetails = base.CreateObjectSet<ImpactDetail>("ImpactDetails");
                }
                return _ImpactDetails;
            }
        }
        private ObjectSet<ImpactDetail> _ImpactDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImpactType> ImpactTypes
        {
            get
            {
                if ((_ImpactTypes == null))
                {
                    _ImpactTypes = base.CreateObjectSet<ImpactType>("ImpactTypes");
                }
                return _ImpactTypes;
            }
        }
        private ObjectSet<ImpactType> _ImpactTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MitigationCat> MitigationCats
        {
            get
            {
                if ((_MitigationCats == null))
                {
                    _MitigationCats = base.CreateObjectSet<MitigationCat>("MitigationCats");
                }
                return _MitigationCats;
            }
        }
        private ObjectSet<MitigationCat> _MitigationCats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MitigationType> MitigationTypes
        {
            get
            {
                if ((_MitigationTypes == null))
                {
                    _MitigationTypes = base.CreateObjectSet<MitigationType>("MitigationTypes");
                }
                return _MitigationTypes;
            }
        }
        private ObjectSet<MitigationType> _MitigationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserInfo> UserInfos
        {
            get
            {
                if ((_UserInfos == null))
                {
                    _UserInfos = base.CreateObjectSet<UserInfo>("UserInfos");
                }
                return _UserInfos;
            }
        }
        private ObjectSet<UserInfo> _UserInfos;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Membership> aspnet_Membership
        {
            get
            {
                if ((_aspnet_Membership == null))
                {
                    _aspnet_Membership = base.CreateObjectSet<aspnet_Membership>("aspnet_Membership");
                }
                return _aspnet_Membership;
            }
        }
        private ObjectSet<aspnet_Membership> _aspnet_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SerialNumber> SerialNumbers
        {
            get
            {
                if ((_SerialNumbers == null))
                {
                    _SerialNumbers = base.CreateObjectSet<SerialNumber>("SerialNumbers");
                }
                return _SerialNumbers;
            }
        }
        private ObjectSet<SerialNumber> _SerialNumbers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Freq> Freqs
        {
            get
            {
                if ((_Freqs == null))
                {
                    _Freqs = base.CreateObjectSet<Freq>("Freqs");
                }
                return _Freqs;
            }
        }
        private ObjectSet<Freq> _Freqs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskProb> RiskProbs
        {
            get
            {
                if ((_RiskProbs == null))
                {
                    _RiskProbs = base.CreateObjectSet<RiskProb>("RiskProbs");
                }
                return _RiskProbs;
            }
        }
        private ObjectSet<RiskProb> _RiskProbs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskImpact> RiskImpacts
        {
            get
            {
                if ((_RiskImpacts == null))
                {
                    _RiskImpacts = base.CreateObjectSet<RiskImpact>("RiskImpacts");
                }
                return _RiskImpacts;
            }
        }
        private ObjectSet<RiskImpact> _RiskImpacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskNonMoneyImpact> RiskNonMoneyImpacts
        {
            get
            {
                if ((_RiskNonMoneyImpacts == null))
                {
                    _RiskNonMoneyImpacts = base.CreateObjectSet<RiskNonMoneyImpact>("RiskNonMoneyImpacts");
                }
                return _RiskNonMoneyImpacts;
            }
        }
        private ObjectSet<RiskNonMoneyImpact> _RiskNonMoneyImpacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskAttachment> RiskAttachments
        {
            get
            {
                if ((_RiskAttachments == null))
                {
                    _RiskAttachments = base.CreateObjectSet<RiskAttachment>("RiskAttachments");
                }
                return _RiskAttachments;
            }
        }
        private ObjectSet<RiskAttachment> _RiskAttachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskApproval> RiskApprovals
        {
            get
            {
                if ((_RiskApprovals == null))
                {
                    _RiskApprovals = base.CreateObjectSet<RiskApproval>("RiskApprovals");
                }
                return _RiskApprovals;
            }
        }
        private ObjectSet<RiskApproval> _RiskApprovals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Risk> Risks
        {
            get
            {
                if ((_Risks == null))
                {
                    _Risks = base.CreateObjectSet<Risk>("Risks");
                }
                return _Risks;
            }
        }
        private ObjectSet<Risk> _Risks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MitigationAttachment> MitigationAttachments
        {
            get
            {
                if ((_MitigationAttachments == null))
                {
                    _MitigationAttachments = base.CreateObjectSet<MitigationAttachment>("MitigationAttachments");
                }
                return _MitigationAttachments;
            }
        }
        private ObjectSet<MitigationAttachment> _MitigationAttachments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubDept> SubDepts
        {
            get
            {
                if ((_SubDepts == null))
                {
                    _SubDepts = base.CreateObjectSet<SubDept>("SubDepts");
                }
                return _SubDepts;
            }
        }
        private ObjectSet<SubDept> _SubDepts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Division> Divisions
        {
            get
            {
                if ((_Divisions == null))
                {
                    _Divisions = base.CreateObjectSet<Division>("Divisions");
                }
                return _Divisions;
            }
        }
        private ObjectSet<Division> _Divisions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubDiv> SubDivs
        {
            get
            {
                if ((_SubDivs == null))
                {
                    _SubDivs = base.CreateObjectSet<SubDiv>("SubDivs");
                }
                return _SubDivs;
            }
        }
        private ObjectSet<SubDiv> _SubDivs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Branch> Branches
        {
            get
            {
                if ((_Branches == null))
                {
                    _Branches = base.CreateObjectSet<Branch>("Branches");
                }
                return _Branches;
            }
        }
        private ObjectSet<Branch> _Branches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SubBranch> SubBranches
        {
            get
            {
                if ((_SubBranches == null))
                {
                    _SubBranches = base.CreateObjectSet<SubBranch>("SubBranches");
                }
                return _SubBranches;
            }
        }
        private ObjectSet<SubBranch> _SubBranches;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BizUnit> BizUnits
        {
            get
            {
                if ((_BizUnits == null))
                {
                    _BizUnits = base.CreateObjectSet<BizUnit>("BizUnits");
                }
                return _BizUnits;
            }
        }
        private ObjectSet<BizUnit> _BizUnits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImpactRef> ImpactRefs
        {
            get
            {
                if ((_ImpactRefs == null))
                {
                    _ImpactRefs = base.CreateObjectSet<ImpactRef>("ImpactRefs");
                }
                return _ImpactRefs;
            }
        }
        private ObjectSet<ImpactRef> _ImpactRefs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskState> RiskStates
        {
            get
            {
                if ((_RiskStates == null))
                {
                    _RiskStates = base.CreateObjectSet<RiskState>("RiskStates");
                }
                return _RiskStates;
            }
        }
        private ObjectSet<RiskState> _RiskStates;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskLevel> RiskLevels
        {
            get
            {
                if ((_RiskLevels == null))
                {
                    _RiskLevels = base.CreateObjectSet<RiskLevel>("RiskLevels");
                }
                return _RiskLevels;
            }
        }
        private ObjectSet<RiskLevel> _RiskLevels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MitigationApproval> MitigationApprovals
        {
            get
            {
                if ((_MitigationApprovals == null))
                {
                    _MitigationApprovals = base.CreateObjectSet<MitigationApproval>("MitigationApprovals");
                }
                return _MitigationApprovals;
            }
        }
        private ObjectSet<MitigationApproval> _MitigationApprovals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskMitigation> RiskMitigations
        {
            get
            {
                if ((_RiskMitigations == null))
                {
                    _RiskMitigations = base.CreateObjectSet<RiskMitigation>("RiskMitigations");
                }
                return _RiskMitigations;
            }
        }
        private ObjectSet<RiskMitigation> _RiskMitigations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HelpDoc> HelpDocs
        {
            get
            {
                if ((_HelpDocs == null))
                {
                    _HelpDocs = base.CreateObjectSet<HelpDoc>("HelpDocs");
                }
                return _HelpDocs;
            }
        }
        private ObjectSet<HelpDoc> _HelpDocs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HelpMenu> HelpMenus
        {
            get
            {
                if ((_HelpMenus == null))
                {
                    _HelpMenus = base.CreateObjectSet<HelpMenu>("HelpMenus");
                }
                return _HelpMenus;
            }
        }
        private ObjectSet<HelpMenu> _HelpMenus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RiskEvent> RiskEvents
        {
            get
            {
                if ((_RiskEvents == null))
                {
                    _RiskEvents = base.CreateObjectSet<RiskEvent>("RiskEvents");
                }
                return _RiskEvents;
            }
        }
        private ObjectSet<RiskEvent> _RiskEvents;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserGroup> UserGroups
        {
            get
            {
                if ((_UserGroups == null))
                {
                    _UserGroups = base.CreateObjectSet<UserGroup>("UserGroups");
                }
                return _UserGroups;
            }
        }
        private ObjectSet<UserGroup> _UserGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MitigationUnit> MitigationUnits
        {
            get
            {
                if ((_MitigationUnits == null))
                {
                    _MitigationUnits = base.CreateObjectSet<MitigationUnit>("MitigationUnits");
                }
                return _MitigationUnits;
            }
        }
        private ObjectSet<MitigationUnit> _MitigationUnits;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_User EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_User(aspnet_User aspnet_User)
        {
            base.AddObject("aspnet_User", aspnet_User);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CauseGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCauseGroups(CauseGroup causeGroup)
        {
            base.AddObject("CauseGroups", causeGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Causes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCauses(Cause cause)
        {
            base.AddObject("Causes", cause);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CauseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCauseTypes(CauseType causeType)
        {
            base.AddObject("CauseTypes", causeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EffectGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEffectGroups(EffectGroup effectGroup)
        {
            base.AddObject("EffectGroups", effectGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Effects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEffects(Effect effect)
        {
            base.AddObject("Effects", effect);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EffectTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEffectTypes(EffectType effectType)
        {
            base.AddObject("EffectTypes", effectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskCats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskCats(RiskCat riskCat)
        {
            base.AddObject("RiskCats", riskCat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskGroups(RiskGroup riskGroup)
        {
            base.AddObject("RiskGroups", riskGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskTypes(RiskType riskType)
        {
            base.AddObject("RiskTypes", riskType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Depts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDepts(Dept dept)
        {
            base.AddObject("Depts", dept);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BranchClasses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBranchClasses(BranchClass branchClass)
        {
            base.AddObject("BranchClasses", branchClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProbLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProbLevels(ProbLevel probLevel)
        {
            base.AddObject("ProbLevels", probLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImpactLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImpactLevels(ImpactLevel impactLevel)
        {
            base.AddObject("ImpactLevels", impactLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImpactCats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImpactCats(ImpactCat impactCat)
        {
            base.AddObject("ImpactCats", impactCat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImpactDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImpactDetails(ImpactDetail impactDetail)
        {
            base.AddObject("ImpactDetails", impactDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImpactTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImpactTypes(ImpactType impactType)
        {
            base.AddObject("ImpactTypes", impactType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MitigationCats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMitigationCats(MitigationCat mitigationCat)
        {
            base.AddObject("MitigationCats", mitigationCat);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MitigationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMitigationTypes(MitigationType mitigationType)
        {
            base.AddObject("MitigationTypes", mitigationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserInfos EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserInfos(UserInfo userInfo)
        {
            base.AddObject("UserInfos", userInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Membership(aspnet_Membership aspnet_Membership)
        {
            base.AddObject("aspnet_Membership", aspnet_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SerialNumbers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSerialNumbers(SerialNumber serialNumber)
        {
            base.AddObject("SerialNumbers", serialNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Freqs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFreqs(Freq freq)
        {
            base.AddObject("Freqs", freq);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskProbs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskProbs(RiskProb riskProb)
        {
            base.AddObject("RiskProbs", riskProb);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskImpacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskImpacts(RiskImpact riskImpact)
        {
            base.AddObject("RiskImpacts", riskImpact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskNonMoneyImpacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskNonMoneyImpacts(RiskNonMoneyImpact riskNonMoneyImpact)
        {
            base.AddObject("RiskNonMoneyImpacts", riskNonMoneyImpact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskAttachments(RiskAttachment riskAttachment)
        {
            base.AddObject("RiskAttachments", riskAttachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskApprovals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskApprovals(RiskApproval riskApproval)
        {
            base.AddObject("RiskApprovals", riskApproval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Risks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRisks(Risk risk)
        {
            base.AddObject("Risks", risk);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MitigationAttachments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMitigationAttachments(MitigationAttachment mitigationAttachment)
        {
            base.AddObject("MitigationAttachments", mitigationAttachment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubDepts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubDepts(SubDept subDept)
        {
            base.AddObject("SubDepts", subDept);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Divisions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDivisions(Division division)
        {
            base.AddObject("Divisions", division);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubDivs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubDivs(SubDiv subDiv)
        {
            base.AddObject("SubDivs", subDiv);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Branches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBranches(Branch branch)
        {
            base.AddObject("Branches", branch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SubBranches EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSubBranches(SubBranch subBranch)
        {
            base.AddObject("SubBranches", subBranch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BizUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBizUnits(BizUnit bizUnit)
        {
            base.AddObject("BizUnits", bizUnit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImpactRefs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImpactRefs(ImpactRef impactRef)
        {
            base.AddObject("ImpactRefs", impactRef);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskStates EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskStates(RiskState riskState)
        {
            base.AddObject("RiskStates", riskState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskLevels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskLevels(RiskLevel riskLevel)
        {
            base.AddObject("RiskLevels", riskLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MitigationApprovals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMitigationApprovals(MitigationApproval mitigationApproval)
        {
            base.AddObject("MitigationApprovals", mitigationApproval);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskMitigations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskMitigations(RiskMitigation riskMitigation)
        {
            base.AddObject("RiskMitigations", riskMitigation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HelpDocs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHelpDocs(HelpDoc helpDoc)
        {
            base.AddObject("HelpDocs", helpDoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HelpMenus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHelpMenus(HelpMenu helpMenu)
        {
            base.AddObject("HelpMenus", helpMenu);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RiskEvents EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRiskEvents(RiskEvent riskEvent)
        {
            base.AddObject("RiskEvents", riskEvent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserGroups(UserGroup userGroup)
        {
            base.AddObject("UserGroups", userGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MitigationUnits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMitigationUnits(MitigationUnit mitigationUnit)
        {
            base.AddObject("MitigationUnits", mitigationUnit);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="aspnet_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Membership object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordFormat">Initial value of the PasswordFormat property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="isLockedOut">Initial value of the IsLockedOut property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="failedPasswordAttemptCount">Initial value of the FailedPasswordAttemptCount property.</param>
        /// <param name="failedPasswordAttemptWindowStart">Initial value of the FailedPasswordAttemptWindowStart property.</param>
        /// <param name="failedPasswordAnswerAttemptCount">Initial value of the FailedPasswordAnswerAttemptCount property.</param>
        /// <param name="failedPasswordAnswerAttemptWindowStart">Initial value of the FailedPasswordAnswerAttemptWindowStart property.</param>
        public static aspnet_Membership Createaspnet_Membership(global::System.Guid applicationId, global::System.Guid userId, global::System.String password, global::System.Int32 passwordFormat, global::System.String passwordSalt, global::System.Boolean isApproved, global::System.Boolean isLockedOut, global::System.DateTime createDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.DateTime lastLockoutDate, global::System.Int32 failedPasswordAttemptCount, global::System.DateTime failedPasswordAttemptWindowStart, global::System.Int32 failedPasswordAnswerAttemptCount, global::System.DateTime failedPasswordAnswerAttemptWindowStart)
        {
            aspnet_Membership aspnet_Membership = new aspnet_Membership();
            aspnet_Membership.ApplicationId = applicationId;
            aspnet_Membership.UserId = userId;
            aspnet_Membership.Password = password;
            aspnet_Membership.PasswordFormat = passwordFormat;
            aspnet_Membership.PasswordSalt = passwordSalt;
            aspnet_Membership.IsApproved = isApproved;
            aspnet_Membership.IsLockedOut = isLockedOut;
            aspnet_Membership.CreateDate = createDate;
            aspnet_Membership.LastLoginDate = lastLoginDate;
            aspnet_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            aspnet_Membership.LastLockoutDate = lastLockoutDate;
            aspnet_Membership.FailedPasswordAttemptCount = failedPasswordAttemptCount;
            aspnet_Membership.FailedPasswordAttemptWindowStart = failedPasswordAttemptWindowStart;
            aspnet_Membership.FailedPasswordAnswerAttemptCount = failedPasswordAnswerAttemptCount;
            aspnet_Membership.FailedPasswordAnswerAttemptWindowStart = failedPasswordAnswerAttemptWindowStart;
            return aspnet_Membership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PasswordFormat
        {
            get
            {
                return _PasswordFormat;
            }
            set
            {
                OnPasswordFormatChanging(value);
                ReportPropertyChanging("PasswordFormat");
                _PasswordFormat = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PasswordFormat");
                OnPasswordFormatChanged();
            }
        }
        private global::System.Int32 _PasswordFormat;
        partial void OnPasswordFormatChanging(global::System.Int32 value);
        partial void OnPasswordFormatChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobilePIN
        {
            get
            {
                return _MobilePIN;
            }
            set
            {
                OnMobilePINChanging(value);
                ReportPropertyChanging("MobilePIN");
                _MobilePIN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobilePIN");
                OnMobilePINChanged();
            }
        }
        private global::System.String _MobilePIN;
        partial void OnMobilePINChanging(global::System.String value);
        partial void OnMobilePINChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoweredEmail
        {
            get
            {
                return _LoweredEmail;
            }
            set
            {
                OnLoweredEmailChanging(value);
                ReportPropertyChanging("LoweredEmail");
                _LoweredEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LoweredEmail");
                OnLoweredEmailChanged();
            }
        }
        private global::System.String _LoweredEmail;
        partial void OnLoweredEmailChanging(global::System.String value);
        partial void OnLoweredEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordQuestion
        {
            get
            {
                return _PasswordQuestion;
            }
            set
            {
                OnPasswordQuestionChanging(value);
                ReportPropertyChanging("PasswordQuestion");
                _PasswordQuestion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordQuestion");
                OnPasswordQuestionChanged();
            }
        }
        private global::System.String _PasswordQuestion;
        partial void OnPasswordQuestionChanging(global::System.String value);
        partial void OnPasswordQuestionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordAnswer
        {
            get
            {
                return _PasswordAnswer;
            }
            set
            {
                OnPasswordAnswerChanging(value);
                ReportPropertyChanging("PasswordAnswer");
                _PasswordAnswer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PasswordAnswer");
                OnPasswordAnswerChanged();
            }
        }
        private global::System.String _PasswordAnswer;
        partial void OnPasswordAnswerChanging(global::System.String value);
        partial void OnPasswordAnswerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLockedOut
        {
            get
            {
                return _IsLockedOut;
            }
            set
            {
                OnIsLockedOutChanging(value);
                ReportPropertyChanging("IsLockedOut");
                _IsLockedOut = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLockedOut");
                OnIsLockedOutChanged();
            }
        }
        private global::System.Boolean _IsLockedOut;
        partial void OnIsLockedOutChanging(global::System.Boolean value);
        partial void OnIsLockedOutChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAttemptCount
        {
            get
            {
                return _FailedPasswordAttemptCount;
            }
            set
            {
                OnFailedPasswordAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptCount");
                _FailedPasswordAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptCount");
                OnFailedPasswordAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAttemptCount;
        partial void OnFailedPasswordAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAttemptWindowStart");
                _FailedPasswordAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAttemptWindowStart");
                OnFailedPasswordAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAttemptWindowStart;
        partial void OnFailedPasswordAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FailedPasswordAnswerAttemptCount
        {
            get
            {
                return _FailedPasswordAnswerAttemptCount;
            }
            set
            {
                OnFailedPasswordAnswerAttemptCountChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptCount");
                _FailedPasswordAnswerAttemptCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptCount");
                OnFailedPasswordAnswerAttemptCountChanged();
            }
        }
        private global::System.Int32 _FailedPasswordAnswerAttemptCount;
        partial void OnFailedPasswordAnswerAttemptCountChanging(global::System.Int32 value);
        partial void OnFailedPasswordAnswerAttemptCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FailedPasswordAnswerAttemptWindowStart
        {
            get
            {
                return _FailedPasswordAnswerAttemptWindowStart;
            }
            set
            {
                OnFailedPasswordAnswerAttemptWindowStartChanging(value);
                ReportPropertyChanging("FailedPasswordAnswerAttemptWindowStart");
                _FailedPasswordAnswerAttemptWindowStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
                OnFailedPasswordAnswerAttemptWindowStartChanged();
            }
        }
        private global::System.DateTime _FailedPasswordAnswerAttemptWindowStart;
        partial void OnFailedPasswordAnswerAttemptWindowStartChanging(global::System.DateTime value);
        partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK__aspnet_Me__UserI__22AA2996", "aspnet_User")]
        public aspnet_User aspnet_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("AskrindoMVCModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("AskrindoMVCModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_User> aspnet_UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("AskrindoMVCModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_User>("AskrindoMVCModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_User", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="aspnet_User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_User object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_User Createaspnet_User(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_User aspnet_User = new aspnet_User();
            aspnet_User.ApplicationId = applicationId;
            aspnet_User.UserId = userId;
            aspnet_User.UserName = userName;
            aspnet_User.LoweredUserName = loweredUserName;
            aspnet_User.IsAnonymous = isAnonymous;
            aspnet_User.LastActivityDate = lastActivityDate;
            return aspnet_User;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_aspnet_Users", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_UserInfos_aspnet_Users", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_UserInfos_aspnet_Users", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_UserInfos_aspnet_Users", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("AskrindoMVCModel.FK_UserInfos_aspnet_Users", "UserInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership")]
        public aspnet_Membership aspnet_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("AskrindoMVCModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("AskrindoMVCModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Membership> aspnet_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Membership>("AskrindoMVCModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Membership>("AskrindoMVCModel.FK__aspnet_Me__UserI__22AA2996", "aspnet_Membership", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="BizUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BizUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BizUnit object.
        /// </summary>
        /// <param name="bizUnitId">Initial value of the BizUnitId property.</param>
        /// <param name="branchId">Initial value of the BranchId property.</param>
        /// <param name="bizUnitName">Initial value of the BizUnitName property.</param>
        /// <param name="isSupporting">Initial value of the IsSupporting property.</param>
        public static BizUnit CreateBizUnit(global::System.Int32 bizUnitId, global::System.Int32 branchId, global::System.String bizUnitName, global::System.Boolean isSupporting)
        {
            BizUnit bizUnit = new BizUnit();
            bizUnit.BizUnitId = bizUnitId;
            bizUnit.BranchId = branchId;
            bizUnit.BizUnitName = bizUnitName;
            bizUnit.IsSupporting = isSupporting;
            return bizUnit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BizUnitId
        {
            get
            {
                return _BizUnitId;
            }
            set
            {
                if (_BizUnitId != value)
                {
                    OnBizUnitIdChanging(value);
                    ReportPropertyChanging("BizUnitId");
                    _BizUnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BizUnitId");
                    OnBizUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _BizUnitId;
        partial void OnBizUnitIdChanging(global::System.Int32 value);
        partial void OnBizUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BranchId
        {
            get
            {
                return _BranchId;
            }
            set
            {
                OnBranchIdChanging(value);
                ReportPropertyChanging("BranchId");
                _BranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchId");
                OnBranchIdChanged();
            }
        }
        private global::System.Int32 _BranchId;
        partial void OnBranchIdChanging(global::System.Int32 value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BizUnitName
        {
            get
            {
                return _BizUnitName;
            }
            set
            {
                OnBizUnitNameChanging(value);
                ReportPropertyChanging("BizUnitName");
                _BizUnitName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BizUnitName");
                OnBizUnitNameChanged();
            }
        }
        private global::System.String _BizUnitName;
        partial void OnBizUnitNameChanging(global::System.String value);
        partial void OnBizUnitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BizUnitCode
        {
            get
            {
                return _BizUnitCode;
            }
            set
            {
                OnBizUnitCodeChanging(value);
                ReportPropertyChanging("BizUnitCode");
                _BizUnitCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BizUnitCode");
                OnBizUnitCodeChanged();
            }
        }
        private global::System.String _BizUnitCode;
        partial void OnBizUnitCodeChanging(global::System.String value);
        partial void OnBizUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSupporting
        {
            get
            {
                return _IsSupporting;
            }
            set
            {
                OnIsSupportingChanging(value);
                ReportPropertyChanging("IsSupporting");
                _IsSupporting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSupporting");
                OnIsSupportingChanged();
            }
        }
        private global::System.Boolean _IsSupporting;
        partial void OnIsSupportingChanging(global::System.Boolean value);
        partial void OnIsSupportingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> statusf
        {
            get
            {
                return _statusf;
            }
            set
            {
                OnstatusfChanging(value);
                ReportPropertyChanging("statusf");
                _statusf = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("statusf");
                OnstatusfChanged();
            }
        }
        private Nullable<global::System.Boolean> _statusf;
        partial void OnstatusfChanging(Nullable<global::System.Boolean> value);
        partial void OnstatusfChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_BizUnits_Branches", "Branch")]
        public Branch Branch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_BizUnits_Branches", "Branch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_BizUnits_Branches", "Branch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> BranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_BizUnits_Branches", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("AskrindoMVCModel.FK_BizUnits_Branches", "Branch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_BizUnits", "RiskApproval")]
        public EntityCollection<RiskApproval> RiskApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_BizUnits", "RiskApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_BizUnits", "RiskApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_BizUnits", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_BizUnits", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_BizUnits", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_BizUnits", "UserInfo")]
        public EntityCollection<UserInfo> UserInfos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_BizUnits", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_BizUnits", "UserInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="Branch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Branch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Branch object.
        /// </summary>
        /// <param name="branchId">Initial value of the BranchId property.</param>
        /// <param name="deptId">Initial value of the DeptId property.</param>
        /// <param name="branchName">Initial value of the BranchName property.</param>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="isSupporting">Initial value of the IsSupporting property.</param>
        public static Branch CreateBranch(global::System.Int32 branchId, global::System.Int32 deptId, global::System.String branchName, global::System.Int32 classId, global::System.Boolean isSupporting)
        {
            Branch branch = new Branch();
            branch.BranchId = branchId;
            branch.DeptId = deptId;
            branch.BranchName = branchName;
            branch.ClassId = classId;
            branch.IsSupporting = isSupporting;
            return branch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BranchId
        {
            get
            {
                return _BranchId;
            }
            set
            {
                if (_BranchId != value)
                {
                    OnBranchIdChanging(value);
                    ReportPropertyChanging("BranchId");
                    _BranchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BranchId");
                    OnBranchIdChanged();
                }
            }
        }
        private global::System.Int32 _BranchId;
        partial void OnBranchIdChanging(global::System.Int32 value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeptId
        {
            get
            {
                return _DeptId;
            }
            set
            {
                OnDeptIdChanging(value);
                ReportPropertyChanging("DeptId");
                _DeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptId");
                OnDeptIdChanged();
            }
        }
        private global::System.Int32 _DeptId;
        partial void OnDeptIdChanging(global::System.Int32 value);
        partial void OnDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BranchName
        {
            get
            {
                return _BranchName;
            }
            set
            {
                OnBranchNameChanging(value);
                ReportPropertyChanging("BranchName");
                _BranchName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BranchName");
                OnBranchNameChanged();
            }
        }
        private global::System.String _BranchName;
        partial void OnBranchNameChanging(global::System.String value);
        partial void OnBranchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                OnClassIdChanging(value);
                ReportPropertyChanging("ClassId");
                _ClassId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClassId");
                OnClassIdChanged();
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BranchCode
        {
            get
            {
                return _BranchCode;
            }
            set
            {
                OnBranchCodeChanging(value);
                ReportPropertyChanging("BranchCode");
                _BranchCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BranchCode");
                OnBranchCodeChanged();
            }
        }
        private global::System.String _BranchCode;
        partial void OnBranchCodeChanging(global::System.String value);
        partial void OnBranchCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSupporting
        {
            get
            {
                return _IsSupporting;
            }
            set
            {
                OnIsSupportingChanging(value);
                ReportPropertyChanging("IsSupporting");
                _IsSupporting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSupporting");
                OnIsSupportingChanged();
            }
        }
        private global::System.Boolean _IsSupporting;
        partial void OnIsSupportingChanging(global::System.Boolean value);
        partial void OnIsSupportingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Branches_BranchClasses", "BranchClass")]
        public BranchClass BranchClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BranchClass>("AskrindoMVCModel.FK_Branches_BranchClasses", "BranchClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BranchClass>("AskrindoMVCModel.FK_Branches_BranchClasses", "BranchClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BranchClass> BranchClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BranchClass>("AskrindoMVCModel.FK_Branches_BranchClasses", "BranchClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BranchClass>("AskrindoMVCModel.FK_Branches_BranchClasses", "BranchClass", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Branches_Depts", "Dept")]
        public Dept Dept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_Branches_Depts", "Dept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_Branches_Depts", "Dept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dept> DeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_Branches_Depts", "Dept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dept>("AskrindoMVCModel.FK_Branches_Depts", "Dept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_Branches", "RiskApproval")]
        public EntityCollection<RiskApproval> RiskApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_Branches", "RiskApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_Branches", "RiskApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Branches", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Branches", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Branches", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_Branches", "UserInfo")]
        public EntityCollection<UserInfo> UserInfos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_Branches", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_Branches", "UserInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_SubBranches_Branches", "SubBranch")]
        public EntityCollection<SubBranch> SubBranches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubBranch>("AskrindoMVCModel.FK_SubBranches_Branches", "SubBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubBranch>("AskrindoMVCModel.FK_SubBranches_Branches", "SubBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_BizUnits_Branches", "BizUnit")]
        public EntityCollection<BizUnit> BizUnits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BizUnit>("AskrindoMVCModel.FK_BizUnits_Branches", "BizUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BizUnit>("AskrindoMVCModel.FK_BizUnits_Branches", "BizUnit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="BranchClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BranchClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BranchClass object.
        /// </summary>
        /// <param name="classId">Initial value of the ClassId property.</param>
        /// <param name="className">Initial value of the ClassName property.</param>
        public static BranchClass CreateBranchClass(global::System.Int32 classId, global::System.String className)
        {
            BranchClass branchClass = new BranchClass();
            branchClass.ClassId = classId;
            branchClass.ClassName = className;
            return branchClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassId
        {
            get
            {
                return _ClassId;
            }
            set
            {
                if (_ClassId != value)
                {
                    OnClassIdChanging(value);
                    ReportPropertyChanging("ClassId");
                    _ClassId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClassId");
                    OnClassIdChanged();
                }
            }
        }
        private global::System.Int32 _ClassId;
        partial void OnClassIdChanging(global::System.Int32 value);
        partial void OnClassIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassName
        {
            get
            {
                return _ClassName;
            }
            set
            {
                OnClassNameChanging(value);
                ReportPropertyChanging("ClassName");
                _ClassName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClassName");
                OnClassNameChanged();
            }
        }
        private global::System.String _ClassName;
        partial void OnClassNameChanging(global::System.String value);
        partial void OnClassNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Branches_BranchClasses", "Branch")]
        public EntityCollection<Branch> Branches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Branch>("AskrindoMVCModel.FK_Branches_BranchClasses", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Branch>("AskrindoMVCModel.FK_Branches_BranchClasses", "Branch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="Cause")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cause : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cause object.
        /// </summary>
        /// <param name="causeId">Initial value of the CauseId property.</param>
        /// <param name="causeTypeId">Initial value of the CauseTypeId property.</param>
        /// <param name="causeName">Initial value of the CauseName property.</param>
        public static Cause CreateCause(global::System.Int32 causeId, global::System.Int32 causeTypeId, global::System.String causeName)
        {
            Cause cause = new Cause();
            cause.CauseId = causeId;
            cause.CauseTypeId = causeTypeId;
            cause.CauseName = causeName;
            return cause;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CauseId
        {
            get
            {
                return _CauseId;
            }
            set
            {
                if (_CauseId != value)
                {
                    OnCauseIdChanging(value);
                    ReportPropertyChanging("CauseId");
                    _CauseId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CauseId");
                    OnCauseIdChanged();
                }
            }
        }
        private global::System.Int32 _CauseId;
        partial void OnCauseIdChanging(global::System.Int32 value);
        partial void OnCauseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CauseTypeId
        {
            get
            {
                return _CauseTypeId;
            }
            set
            {
                OnCauseTypeIdChanging(value);
                ReportPropertyChanging("CauseTypeId");
                _CauseTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CauseTypeId");
                OnCauseTypeIdChanged();
            }
        }
        private global::System.Int32 _CauseTypeId;
        partial void OnCauseTypeIdChanging(global::System.Int32 value);
        partial void OnCauseTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CauseName
        {
            get
            {
                return _CauseName;
            }
            set
            {
                OnCauseNameChanging(value);
                ReportPropertyChanging("CauseName");
                _CauseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CauseName");
                OnCauseNameChanged();
            }
        }
        private global::System.String _CauseName;
        partial void OnCauseNameChanging(global::System.String value);
        partial void OnCauseNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Causes_CauseTypes", "CauseTypes")]
        public CauseType CauseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseType>("AskrindoMVCModel.FK_Causes_CauseTypes", "CauseTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseType>("AskrindoMVCModel.FK_Causes_CauseTypes", "CauseTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CauseType> CauseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseType>("AskrindoMVCModel.FK_Causes_CauseTypes", "CauseTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CauseType>("AskrindoMVCModel.FK_Causes_CauseTypes", "CauseTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Causes", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Causes", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Causes", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="CauseGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CauseGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CauseGroup object.
        /// </summary>
        /// <param name="causeGroupId">Initial value of the CauseGroupId property.</param>
        /// <param name="causeGroupName">Initial value of the CauseGroupName property.</param>
        public static CauseGroup CreateCauseGroup(global::System.Int32 causeGroupId, global::System.String causeGroupName)
        {
            CauseGroup causeGroup = new CauseGroup();
            causeGroup.CauseGroupId = causeGroupId;
            causeGroup.CauseGroupName = causeGroupName;
            return causeGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CauseGroupId
        {
            get
            {
                return _CauseGroupId;
            }
            set
            {
                if (_CauseGroupId != value)
                {
                    OnCauseGroupIdChanging(value);
                    ReportPropertyChanging("CauseGroupId");
                    _CauseGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CauseGroupId");
                    OnCauseGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _CauseGroupId;
        partial void OnCauseGroupIdChanging(global::System.Int32 value);
        partial void OnCauseGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CauseGroupName
        {
            get
            {
                return _CauseGroupName;
            }
            set
            {
                OnCauseGroupNameChanging(value);
                ReportPropertyChanging("CauseGroupName");
                _CauseGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CauseGroupName");
                OnCauseGroupNameChanged();
            }
        }
        private global::System.String _CauseGroupName;
        partial void OnCauseGroupNameChanging(global::System.String value);
        partial void OnCauseGroupNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_CauseTypes_CauseGroups", "CauseTypes")]
        public EntityCollection<CauseType> CauseTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CauseType>("AskrindoMVCModel.FK_CauseTypes_CauseGroups", "CauseTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CauseType>("AskrindoMVCModel.FK_CauseTypes_CauseGroups", "CauseTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_CauseGroups", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_CauseGroups", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_CauseGroups", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="CauseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CauseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CauseType object.
        /// </summary>
        /// <param name="causeTypeId">Initial value of the CauseTypeId property.</param>
        /// <param name="causeGroupId">Initial value of the CauseGroupId property.</param>
        /// <param name="causeTypeName">Initial value of the CauseTypeName property.</param>
        public static CauseType CreateCauseType(global::System.Int32 causeTypeId, global::System.Int32 causeGroupId, global::System.String causeTypeName)
        {
            CauseType causeType = new CauseType();
            causeType.CauseTypeId = causeTypeId;
            causeType.CauseGroupId = causeGroupId;
            causeType.CauseTypeName = causeTypeName;
            return causeType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CauseTypeId
        {
            get
            {
                return _CauseTypeId;
            }
            set
            {
                if (_CauseTypeId != value)
                {
                    OnCauseTypeIdChanging(value);
                    ReportPropertyChanging("CauseTypeId");
                    _CauseTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CauseTypeId");
                    OnCauseTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _CauseTypeId;
        partial void OnCauseTypeIdChanging(global::System.Int32 value);
        partial void OnCauseTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CauseGroupId
        {
            get
            {
                return _CauseGroupId;
            }
            set
            {
                OnCauseGroupIdChanging(value);
                ReportPropertyChanging("CauseGroupId");
                _CauseGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CauseGroupId");
                OnCauseGroupIdChanged();
            }
        }
        private global::System.Int32 _CauseGroupId;
        partial void OnCauseGroupIdChanging(global::System.Int32 value);
        partial void OnCauseGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CauseTypeName
        {
            get
            {
                return _CauseTypeName;
            }
            set
            {
                OnCauseTypeNameChanging(value);
                ReportPropertyChanging("CauseTypeName");
                _CauseTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CauseTypeName");
                OnCauseTypeNameChanged();
            }
        }
        private global::System.String _CauseTypeName;
        partial void OnCauseTypeNameChanging(global::System.String value);
        partial void OnCauseTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_CauseTypes_CauseGroups", "CauseGroups")]
        public CauseGroup CauseGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseGroup>("AskrindoMVCModel.FK_CauseTypes_CauseGroups", "CauseGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseGroup>("AskrindoMVCModel.FK_CauseTypes_CauseGroups", "CauseGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CauseGroup> CauseGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseGroup>("AskrindoMVCModel.FK_CauseTypes_CauseGroups", "CauseGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CauseGroup>("AskrindoMVCModel.FK_CauseTypes_CauseGroups", "CauseGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Causes_CauseTypes", "Causes")]
        public EntityCollection<Cause> Causes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cause>("AskrindoMVCModel.FK_Causes_CauseTypes", "Causes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cause>("AskrindoMVCModel.FK_Causes_CauseTypes", "Causes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_CauseTypes", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_CauseTypes", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_CauseTypes", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="Dept")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dept : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Dept object.
        /// </summary>
        /// <param name="deptId">Initial value of the DeptId property.</param>
        /// <param name="deptName">Initial value of the DeptName property.</param>
        public static Dept CreateDept(global::System.Int32 deptId, global::System.String deptName)
        {
            Dept dept = new Dept();
            dept.DeptId = deptId;
            dept.DeptName = deptName;
            return dept;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeptId
        {
            get
            {
                return _DeptId;
            }
            set
            {
                if (_DeptId != value)
                {
                    OnDeptIdChanging(value);
                    ReportPropertyChanging("DeptId");
                    _DeptId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeptId");
                    OnDeptIdChanged();
                }
            }
        }
        private global::System.Int32 _DeptId;
        partial void OnDeptIdChanging(global::System.Int32 value);
        partial void OnDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeptName
        {
            get
            {
                return _DeptName;
            }
            set
            {
                OnDeptNameChanging(value);
                ReportPropertyChanging("DeptName");
                _DeptName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeptName");
                OnDeptNameChanged();
            }
        }
        private global::System.String _DeptName;
        partial void OnDeptNameChanging(global::System.String value);
        partial void OnDeptNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_Depts", "UserInfo")]
        public EntityCollection<UserInfo> UserInfos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_Depts", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_Depts", "UserInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_Depts", "RiskApproval")]
        public EntityCollection<RiskApproval> RiskApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_Depts", "RiskApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_Depts", "RiskApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Depts", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Depts", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Depts", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_SubDepts_Depts", "SubDept")]
        public EntityCollection<SubDept> SubDepts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubDept>("AskrindoMVCModel.FK_SubDepts_Depts", "SubDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubDept>("AskrindoMVCModel.FK_SubDepts_Depts", "SubDept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Divisions_Depts", "Division")]
        public EntityCollection<Division> Divisions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Division>("AskrindoMVCModel.FK_Divisions_Depts", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Division>("AskrindoMVCModel.FK_Divisions_Depts", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Branches_Depts", "Branch")]
        public EntityCollection<Branch> Branches
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Branch>("AskrindoMVCModel.FK_Branches_Depts", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Branch>("AskrindoMVCModel.FK_Branches_Depts", "Branch", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="Division")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Division : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Division object.
        /// </summary>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="deptId">Initial value of the DeptId property.</param>
        /// <param name="divisionName">Initial value of the DivisionName property.</param>
        /// <param name="isSupporting">Initial value of the IsSupporting property.</param>
        public static Division CreateDivision(global::System.Int32 divisionId, global::System.Int32 deptId, global::System.String divisionName, global::System.Boolean isSupporting)
        {
            Division division = new Division();
            division.DivisionId = divisionId;
            division.DeptId = deptId;
            division.DivisionName = divisionName;
            division.IsSupporting = isSupporting;
            return division;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                if (_DivisionId != value)
                {
                    OnDivisionIdChanging(value);
                    ReportPropertyChanging("DivisionId");
                    _DivisionId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DivisionId");
                    OnDivisionIdChanged();
                }
            }
        }
        private global::System.Int32 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int32 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeptId
        {
            get
            {
                return _DeptId;
            }
            set
            {
                OnDeptIdChanging(value);
                ReportPropertyChanging("DeptId");
                _DeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptId");
                OnDeptIdChanged();
            }
        }
        private global::System.Int32 _DeptId;
        partial void OnDeptIdChanging(global::System.Int32 value);
        partial void OnDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DivisionName
        {
            get
            {
                return _DivisionName;
            }
            set
            {
                OnDivisionNameChanging(value);
                ReportPropertyChanging("DivisionName");
                _DivisionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DivisionName");
                OnDivisionNameChanged();
            }
        }
        private global::System.String _DivisionName;
        partial void OnDivisionNameChanging(global::System.String value);
        partial void OnDivisionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSupporting
        {
            get
            {
                return _IsSupporting;
            }
            set
            {
                OnIsSupportingChanging(value);
                ReportPropertyChanging("IsSupporting");
                _IsSupporting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSupporting");
                OnIsSupportingChanged();
            }
        }
        private global::System.Boolean _IsSupporting;
        partial void OnIsSupportingChanging(global::System.Boolean value);
        partial void OnIsSupportingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Divisions_Depts", "Dept")]
        public Dept Dept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_Divisions_Depts", "Dept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_Divisions_Depts", "Dept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dept> DeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_Divisions_Depts", "Dept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dept>("AskrindoMVCModel.FK_Divisions_Depts", "Dept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_Divisions", "RiskApproval")]
        public EntityCollection<RiskApproval> RiskApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_Divisions", "RiskApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_Divisions", "RiskApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Divisions", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Divisions", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Divisions", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_SubDivs_Divisions", "SubDiv")]
        public EntityCollection<SubDiv> SubDivs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubDiv>("AskrindoMVCModel.FK_SubDivs_Divisions", "SubDiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubDiv>("AskrindoMVCModel.FK_SubDivs_Divisions", "SubDiv", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_Divisions", "UserInfo")]
        public EntityCollection<UserInfo> UserInfos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_Divisions", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_Divisions", "UserInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Mitigationunit2", "MitigationUnit")]
        public EntityCollection<MitigationUnit> MitigationUnits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MitigationUnit>("AskrindoMVCModel.FK_Mitigationunit2", "MitigationUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MitigationUnit>("AskrindoMVCModel.FK_Mitigationunit2", "MitigationUnit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="Effect")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Effect : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Effect object.
        /// </summary>
        /// <param name="effectId">Initial value of the EffectId property.</param>
        /// <param name="effectTypeId">Initial value of the EffectTypeId property.</param>
        /// <param name="effectName">Initial value of the EffectName property.</param>
        public static Effect CreateEffect(global::System.Int32 effectId, global::System.Int32 effectTypeId, global::System.String effectName)
        {
            Effect effect = new Effect();
            effect.EffectId = effectId;
            effect.EffectTypeId = effectTypeId;
            effect.EffectName = effectName;
            return effect;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EffectId
        {
            get
            {
                return _EffectId;
            }
            set
            {
                if (_EffectId != value)
                {
                    OnEffectIdChanging(value);
                    ReportPropertyChanging("EffectId");
                    _EffectId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EffectId");
                    OnEffectIdChanged();
                }
            }
        }
        private global::System.Int32 _EffectId;
        partial void OnEffectIdChanging(global::System.Int32 value);
        partial void OnEffectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EffectTypeId
        {
            get
            {
                return _EffectTypeId;
            }
            set
            {
                OnEffectTypeIdChanging(value);
                ReportPropertyChanging("EffectTypeId");
                _EffectTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectTypeId");
                OnEffectTypeIdChanged();
            }
        }
        private global::System.Int32 _EffectTypeId;
        partial void OnEffectTypeIdChanging(global::System.Int32 value);
        partial void OnEffectTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EffectName
        {
            get
            {
                return _EffectName;
            }
            set
            {
                OnEffectNameChanging(value);
                ReportPropertyChanging("EffectName");
                _EffectName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EffectName");
                OnEffectNameChanged();
            }
        }
        private global::System.String _EffectName;
        partial void OnEffectNameChanging(global::System.String value);
        partial void OnEffectNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Effects_EffectTypes", "EffectTypes")]
        public EffectType EffectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectType>("AskrindoMVCModel.FK_Effects_EffectTypes", "EffectTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectType>("AskrindoMVCModel.FK_Effects_EffectTypes", "EffectTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EffectType> EffectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectType>("AskrindoMVCModel.FK_Effects_EffectTypes", "EffectTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EffectType>("AskrindoMVCModel.FK_Effects_EffectTypes", "EffectTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Effects", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Effects", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_Effects", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="EffectGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EffectGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EffectGroup object.
        /// </summary>
        /// <param name="effectGroupId">Initial value of the EffectGroupId property.</param>
        /// <param name="effectGroupName">Initial value of the EffectGroupName property.</param>
        public static EffectGroup CreateEffectGroup(global::System.Int32 effectGroupId, global::System.String effectGroupName)
        {
            EffectGroup effectGroup = new EffectGroup();
            effectGroup.EffectGroupId = effectGroupId;
            effectGroup.EffectGroupName = effectGroupName;
            return effectGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EffectGroupId
        {
            get
            {
                return _EffectGroupId;
            }
            set
            {
                if (_EffectGroupId != value)
                {
                    OnEffectGroupIdChanging(value);
                    ReportPropertyChanging("EffectGroupId");
                    _EffectGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EffectGroupId");
                    OnEffectGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _EffectGroupId;
        partial void OnEffectGroupIdChanging(global::System.Int32 value);
        partial void OnEffectGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EffectGroupName
        {
            get
            {
                return _EffectGroupName;
            }
            set
            {
                OnEffectGroupNameChanging(value);
                ReportPropertyChanging("EffectGroupName");
                _EffectGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EffectGroupName");
                OnEffectGroupNameChanged();
            }
        }
        private global::System.String _EffectGroupName;
        partial void OnEffectGroupNameChanging(global::System.String value);
        partial void OnEffectGroupNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_EffectTypes_EffectGroups", "EffectTypes")]
        public EntityCollection<EffectType> EffectTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EffectType>("AskrindoMVCModel.FK_EffectTypes_EffectGroups", "EffectTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EffectType>("AskrindoMVCModel.FK_EffectTypes_EffectGroups", "EffectTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_EffectGroups", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_EffectGroups", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_EffectGroups", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="EffectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EffectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EffectType object.
        /// </summary>
        /// <param name="effectTypeId">Initial value of the EffectTypeId property.</param>
        /// <param name="effectGroupId">Initial value of the EffectGroupId property.</param>
        /// <param name="effectTypeName">Initial value of the EffectTypeName property.</param>
        public static EffectType CreateEffectType(global::System.Int32 effectTypeId, global::System.Int32 effectGroupId, global::System.String effectTypeName)
        {
            EffectType effectType = new EffectType();
            effectType.EffectTypeId = effectTypeId;
            effectType.EffectGroupId = effectGroupId;
            effectType.EffectTypeName = effectTypeName;
            return effectType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EffectTypeId
        {
            get
            {
                return _EffectTypeId;
            }
            set
            {
                if (_EffectTypeId != value)
                {
                    OnEffectTypeIdChanging(value);
                    ReportPropertyChanging("EffectTypeId");
                    _EffectTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EffectTypeId");
                    OnEffectTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _EffectTypeId;
        partial void OnEffectTypeIdChanging(global::System.Int32 value);
        partial void OnEffectTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EffectGroupId
        {
            get
            {
                return _EffectGroupId;
            }
            set
            {
                OnEffectGroupIdChanging(value);
                ReportPropertyChanging("EffectGroupId");
                _EffectGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectGroupId");
                OnEffectGroupIdChanged();
            }
        }
        private global::System.Int32 _EffectGroupId;
        partial void OnEffectGroupIdChanging(global::System.Int32 value);
        partial void OnEffectGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EffectTypeName
        {
            get
            {
                return _EffectTypeName;
            }
            set
            {
                OnEffectTypeNameChanging(value);
                ReportPropertyChanging("EffectTypeName");
                _EffectTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EffectTypeName");
                OnEffectTypeNameChanged();
            }
        }
        private global::System.String _EffectTypeName;
        partial void OnEffectTypeNameChanging(global::System.String value);
        partial void OnEffectTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_EffectTypes_EffectGroups", "EffectGroups")]
        public EffectGroup EffectGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectGroup>("AskrindoMVCModel.FK_EffectTypes_EffectGroups", "EffectGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectGroup>("AskrindoMVCModel.FK_EffectTypes_EffectGroups", "EffectGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EffectGroup> EffectGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectGroup>("AskrindoMVCModel.FK_EffectTypes_EffectGroups", "EffectGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EffectGroup>("AskrindoMVCModel.FK_EffectTypes_EffectGroups", "EffectGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Effects_EffectTypes", "Effects")]
        public EntityCollection<Effect> Effects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Effect>("AskrindoMVCModel.FK_Effects_EffectTypes", "Effects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Effect>("AskrindoMVCModel.FK_Effects_EffectTypes", "Effects", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_EffectTypes", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_EffectTypes", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_EffectTypes", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="Freq")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Freq : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Freq object.
        /// </summary>
        /// <param name="freqId">Initial value of the FreqId property.</param>
        /// <param name="freqName">Initial value of the FreqName property.</param>
        public static Freq CreateFreq(global::System.Int32 freqId, global::System.String freqName)
        {
            Freq freq = new Freq();
            freq.FreqId = freqId;
            freq.FreqName = freqName;
            return freq;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FreqId
        {
            get
            {
                return _FreqId;
            }
            set
            {
                if (_FreqId != value)
                {
                    OnFreqIdChanging(value);
                    ReportPropertyChanging("FreqId");
                    _FreqId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FreqId");
                    OnFreqIdChanged();
                }
            }
        }
        private global::System.Int32 _FreqId;
        partial void OnFreqIdChanging(global::System.Int32 value);
        partial void OnFreqIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FreqName
        {
            get
            {
                return _FreqName;
            }
            set
            {
                OnFreqNameChanging(value);
                ReportPropertyChanging("FreqName");
                _FreqName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FreqName");
                OnFreqNameChanged();
            }
        }
        private global::System.String _FreqName;
        partial void OnFreqNameChanging(global::System.String value);
        partial void OnFreqNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskProbs_Freqs", "RiskProb")]
        public EntityCollection<RiskProb> RiskProbs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskProb>("AskrindoMVCModel.FK_RiskProbs_Freqs", "RiskProb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskProb>("AskrindoMVCModel.FK_RiskProbs_Freqs", "RiskProb", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="HelpDoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HelpDoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HelpDoc object.
        /// </summary>
        /// <param name="docId">Initial value of the DocId property.</param>
        /// <param name="menuId">Initial value of the MenuId property.</param>
        /// <param name="docName">Initial value of the DocName property.</param>
        /// <param name="isVisible">Initial value of the IsVisible property.</param>
        public static HelpDoc CreateHelpDoc(global::System.Int32 docId, global::System.Int32 menuId, global::System.String docName, global::System.Boolean isVisible)
        {
            HelpDoc helpDoc = new HelpDoc();
            helpDoc.DocId = docId;
            helpDoc.MenuId = menuId;
            helpDoc.DocName = docName;
            helpDoc.IsVisible = isVisible;
            return helpDoc;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocId
        {
            get
            {
                return _DocId;
            }
            set
            {
                if (_DocId != value)
                {
                    OnDocIdChanging(value);
                    ReportPropertyChanging("DocId");
                    _DocId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocId");
                    OnDocIdChanged();
                }
            }
        }
        private global::System.Int32 _DocId;
        partial void OnDocIdChanging(global::System.Int32 value);
        partial void OnDocIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuId
        {
            get
            {
                return _MenuId;
            }
            set
            {
                OnMenuIdChanging(value);
                ReportPropertyChanging("MenuId");
                _MenuId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MenuId");
                OnMenuIdChanged();
            }
        }
        private global::System.Int32 _MenuId;
        partial void OnMenuIdChanging(global::System.Int32 value);
        partial void OnMenuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocName
        {
            get
            {
                return _DocName;
            }
            set
            {
                OnDocNameChanging(value);
                ReportPropertyChanging("DocName");
                _DocName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DocName");
                OnDocNameChanged();
            }
        }
        private global::System.String _DocName;
        partial void OnDocNameChanging(global::System.String value);
        partial void OnDocNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DocInfo
        {
            get
            {
                return _DocInfo;
            }
            set
            {
                OnDocInfoChanging(value);
                ReportPropertyChanging("DocInfo");
                _DocInfo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DocInfo");
                OnDocInfoChanged();
            }
        }
        private global::System.String _DocInfo;
        partial void OnDocInfoChanging(global::System.String value);
        partial void OnDocInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private global::System.Boolean _IsVisible;
        partial void OnIsVisibleChanging(global::System.Boolean value);
        partial void OnIsVisibleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContentLength
        {
            get
            {
                return _ContentLength;
            }
            set
            {
                OnContentLengthChanging(value);
                ReportPropertyChanging("ContentLength");
                _ContentLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentLength");
                OnContentLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _ContentLength;
        partial void OnContentLengthChanging(Nullable<global::System.Int32> value);
        partial void OnContentLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_HelpDocs_HelpMenus", "HelpMenu")]
        public HelpMenu HelpMenu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HelpMenu>("AskrindoMVCModel.FK_HelpDocs_HelpMenus", "HelpMenu").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HelpMenu>("AskrindoMVCModel.FK_HelpDocs_HelpMenus", "HelpMenu").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HelpMenu> HelpMenuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HelpMenu>("AskrindoMVCModel.FK_HelpDocs_HelpMenus", "HelpMenu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HelpMenu>("AskrindoMVCModel.FK_HelpDocs_HelpMenus", "HelpMenu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="HelpMenu")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HelpMenu : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HelpMenu object.
        /// </summary>
        /// <param name="menuId">Initial value of the MenuId property.</param>
        /// <param name="menuName">Initial value of the MenuName property.</param>
        /// <param name="isVisible">Initial value of the IsVisible property.</param>
        public static HelpMenu CreateHelpMenu(global::System.Int32 menuId, global::System.String menuName, global::System.Boolean isVisible)
        {
            HelpMenu helpMenu = new HelpMenu();
            helpMenu.MenuId = menuId;
            helpMenu.MenuName = menuName;
            helpMenu.IsVisible = isVisible;
            return helpMenu;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MenuId
        {
            get
            {
                return _MenuId;
            }
            set
            {
                if (_MenuId != value)
                {
                    OnMenuIdChanging(value);
                    ReportPropertyChanging("MenuId");
                    _MenuId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MenuId");
                    OnMenuIdChanged();
                }
            }
        }
        private global::System.Int32 _MenuId;
        partial void OnMenuIdChanging(global::System.Int32 value);
        partial void OnMenuIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MenuName
        {
            get
            {
                return _MenuName;
            }
            set
            {
                OnMenuNameChanging(value);
                ReportPropertyChanging("MenuName");
                _MenuName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MenuName");
                OnMenuNameChanged();
            }
        }
        private global::System.String _MenuName;
        partial void OnMenuNameChanging(global::System.String value);
        partial void OnMenuNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsVisible
        {
            get
            {
                return _IsVisible;
            }
            set
            {
                OnIsVisibleChanging(value);
                ReportPropertyChanging("IsVisible");
                _IsVisible = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsVisible");
                OnIsVisibleChanged();
            }
        }
        private global::System.Boolean _IsVisible;
        partial void OnIsVisibleChanging(global::System.Boolean value);
        partial void OnIsVisibleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_HelpDocs_HelpMenus", "HelpDoc")]
        public EntityCollection<HelpDoc> HelpDocs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HelpDoc>("AskrindoMVCModel.FK_HelpDocs_HelpMenus", "HelpDoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HelpDoc>("AskrindoMVCModel.FK_HelpDocs_HelpMenus", "HelpDoc", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="ImpactCat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImpactCat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImpactCat object.
        /// </summary>
        /// <param name="impactCatId">Initial value of the ImpactCatId property.</param>
        /// <param name="impactCatName">Initial value of the ImpactCatName property.</param>
        public static ImpactCat CreateImpactCat(global::System.Int32 impactCatId, global::System.String impactCatName)
        {
            ImpactCat impactCat = new ImpactCat();
            impactCat.ImpactCatId = impactCatId;
            impactCat.ImpactCatName = impactCatName;
            return impactCat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactCatId
        {
            get
            {
                return _ImpactCatId;
            }
            set
            {
                if (_ImpactCatId != value)
                {
                    OnImpactCatIdChanging(value);
                    ReportPropertyChanging("ImpactCatId");
                    _ImpactCatId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImpactCatId");
                    OnImpactCatIdChanged();
                }
            }
        }
        private global::System.Int32 _ImpactCatId;
        partial void OnImpactCatIdChanging(global::System.Int32 value);
        partial void OnImpactCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImpactCatName
        {
            get
            {
                return _ImpactCatName;
            }
            set
            {
                OnImpactCatNameChanging(value);
                ReportPropertyChanging("ImpactCatName");
                _ImpactCatName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImpactCatName");
                OnImpactCatNameChanged();
            }
        }
        private global::System.String _ImpactCatName;
        partial void OnImpactCatNameChanging(global::System.String value);
        partial void OnImpactCatNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_ImpactTypes_ImpactCats", "ImpactType")]
        public EntityCollection<ImpactType> ImpactTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImpactType>("AskrindoMVCModel.FK_ImpactTypes_ImpactCats", "ImpactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImpactType>("AskrindoMVCModel.FK_ImpactTypes_ImpactCats", "ImpactType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="ImpactDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImpactDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImpactDetail object.
        /// </summary>
        /// <param name="impactDetailId">Initial value of the ImpactDetailId property.</param>
        /// <param name="impactTypeId">Initial value of the ImpactTypeId property.</param>
        /// <param name="impactLevelId">Initial value of the ImpactLevelId property.</param>
        /// <param name="impactDetailName">Initial value of the ImpactDetailName property.</param>
        public static ImpactDetail CreateImpactDetail(global::System.Int32 impactDetailId, global::System.Int32 impactTypeId, global::System.Int32 impactLevelId, global::System.String impactDetailName)
        {
            ImpactDetail impactDetail = new ImpactDetail();
            impactDetail.ImpactDetailId = impactDetailId;
            impactDetail.ImpactTypeId = impactTypeId;
            impactDetail.ImpactLevelId = impactLevelId;
            impactDetail.ImpactDetailName = impactDetailName;
            return impactDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactDetailId
        {
            get
            {
                return _ImpactDetailId;
            }
            set
            {
                if (_ImpactDetailId != value)
                {
                    OnImpactDetailIdChanging(value);
                    ReportPropertyChanging("ImpactDetailId");
                    _ImpactDetailId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImpactDetailId");
                    OnImpactDetailIdChanged();
                }
            }
        }
        private global::System.Int32 _ImpactDetailId;
        partial void OnImpactDetailIdChanging(global::System.Int32 value);
        partial void OnImpactDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactTypeId
        {
            get
            {
                return _ImpactTypeId;
            }
            set
            {
                OnImpactTypeIdChanging(value);
                ReportPropertyChanging("ImpactTypeId");
                _ImpactTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactTypeId");
                OnImpactTypeIdChanged();
            }
        }
        private global::System.Int32 _ImpactTypeId;
        partial void OnImpactTypeIdChanging(global::System.Int32 value);
        partial void OnImpactTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactLevelId
        {
            get
            {
                return _ImpactLevelId;
            }
            set
            {
                OnImpactLevelIdChanging(value);
                ReportPropertyChanging("ImpactLevelId");
                _ImpactLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactLevelId");
                OnImpactLevelIdChanged();
            }
        }
        private global::System.Int32 _ImpactLevelId;
        partial void OnImpactLevelIdChanging(global::System.Int32 value);
        partial void OnImpactLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImpactDetailName
        {
            get
            {
                return _ImpactDetailName;
            }
            set
            {
                OnImpactDetailNameChanging(value);
                ReportPropertyChanging("ImpactDetailName");
                _ImpactDetailName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImpactDetailName");
                OnImpactDetailNameChanged();
            }
        }
        private global::System.String _ImpactDetailName;
        partial void OnImpactDetailNameChanging(global::System.String value);
        partial void OnImpactDetailNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_ImpactDetails_ImpactLevels", "ImpactLevel")]
        public ImpactLevel ImpactLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_ImpactDetails_ImpactLevels", "ImpactLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_ImpactDetails_ImpactLevels", "ImpactLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactLevel> ImpactLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_ImpactDetails_ImpactLevels", "ImpactLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_ImpactDetails_ImpactLevels", "ImpactLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_ImpactDetails_ImpactTypes", "ImpactType")]
        public ImpactType ImpactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactType>("AskrindoMVCModel.FK_ImpactDetails_ImpactTypes", "ImpactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactType>("AskrindoMVCModel.FK_ImpactDetails_ImpactTypes", "ImpactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactType> ImpactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactType>("AskrindoMVCModel.FK_ImpactDetails_ImpactTypes", "ImpactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactType>("AskrindoMVCModel.FK_ImpactDetails_ImpactTypes", "ImpactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_ImpactDetails", "RiskNonMoneyImpact")]
        public EntityCollection<RiskNonMoneyImpact> RiskNonMoneyImpacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskNonMoneyImpact>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactDetails", "RiskNonMoneyImpact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskNonMoneyImpact>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactDetails", "RiskNonMoneyImpact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="ImpactLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImpactLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImpactLevel object.
        /// </summary>
        /// <param name="impactLevelId">Initial value of the ImpactLevelId property.</param>
        /// <param name="impactLevelName">Initial value of the ImpactLevelName property.</param>
        /// <param name="pctMin">Initial value of the PctMin property.</param>
        /// <param name="pctMax">Initial value of the PctMax property.</param>
        /// <param name="moneyMin">Initial value of the MoneyMin property.</param>
        /// <param name="moneyMax">Initial value of the MoneyMax property.</param>
        public static ImpactLevel CreateImpactLevel(global::System.Int32 impactLevelId, global::System.String impactLevelName, global::System.Int32 pctMin, global::System.Int32 pctMax, global::System.Decimal moneyMin, global::System.Decimal moneyMax)
        {
            ImpactLevel impactLevel = new ImpactLevel();
            impactLevel.ImpactLevelId = impactLevelId;
            impactLevel.ImpactLevelName = impactLevelName;
            impactLevel.PctMin = pctMin;
            impactLevel.PctMax = pctMax;
            impactLevel.MoneyMin = moneyMin;
            impactLevel.MoneyMax = moneyMax;
            return impactLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactLevelId
        {
            get
            {
                return _ImpactLevelId;
            }
            set
            {
                if (_ImpactLevelId != value)
                {
                    OnImpactLevelIdChanging(value);
                    ReportPropertyChanging("ImpactLevelId");
                    _ImpactLevelId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImpactLevelId");
                    OnImpactLevelIdChanged();
                }
            }
        }
        private global::System.Int32 _ImpactLevelId;
        partial void OnImpactLevelIdChanging(global::System.Int32 value);
        partial void OnImpactLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImpactLevelName
        {
            get
            {
                return _ImpactLevelName;
            }
            set
            {
                OnImpactLevelNameChanging(value);
                ReportPropertyChanging("ImpactLevelName");
                _ImpactLevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImpactLevelName");
                OnImpactLevelNameChanged();
            }
        }
        private global::System.String _ImpactLevelName;
        partial void OnImpactLevelNameChanging(global::System.String value);
        partial void OnImpactLevelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PctMin
        {
            get
            {
                return _PctMin;
            }
            set
            {
                OnPctMinChanging(value);
                ReportPropertyChanging("PctMin");
                _PctMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PctMin");
                OnPctMinChanged();
            }
        }
        private global::System.Int32 _PctMin;
        partial void OnPctMinChanging(global::System.Int32 value);
        partial void OnPctMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PctMax
        {
            get
            {
                return _PctMax;
            }
            set
            {
                OnPctMaxChanging(value);
                ReportPropertyChanging("PctMax");
                _PctMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PctMax");
                OnPctMaxChanged();
            }
        }
        private global::System.Int32 _PctMax;
        partial void OnPctMaxChanging(global::System.Int32 value);
        partial void OnPctMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MoneyMin
        {
            get
            {
                return _MoneyMin;
            }
            set
            {
                OnMoneyMinChanging(value);
                ReportPropertyChanging("MoneyMin");
                _MoneyMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MoneyMin");
                OnMoneyMinChanged();
            }
        }
        private global::System.Decimal _MoneyMin;
        partial void OnMoneyMinChanging(global::System.Decimal value);
        partial void OnMoneyMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MoneyMax
        {
            get
            {
                return _MoneyMax;
            }
            set
            {
                OnMoneyMaxChanging(value);
                ReportPropertyChanging("MoneyMax");
                _MoneyMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MoneyMax");
                OnMoneyMaxChanged();
            }
        }
        private global::System.Decimal _MoneyMax;
        partial void OnMoneyMaxChanging(global::System.Decimal value);
        partial void OnMoneyMaxChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_ImpactDetails_ImpactLevels", "ImpactDetail")]
        public EntityCollection<ImpactDetail> ImpactDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImpactDetail>("AskrindoMVCModel.FK_ImpactDetails_ImpactLevels", "ImpactDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImpactDetail>("AskrindoMVCModel.FK_ImpactDetails_ImpactLevels", "ImpactDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskImpacts_ImpactLevels", "RiskImpact")]
        public EntityCollection<RiskImpact> RiskImpacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskImpact>("AskrindoMVCModel.FK_RiskImpacts_ImpactLevels", "RiskImpact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskImpact>("AskrindoMVCModel.FK_RiskImpacts_ImpactLevels", "RiskImpact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_ImpactLevels", "RiskNonMoneyImpact")]
        public EntityCollection<RiskNonMoneyImpact> RiskNonMoneyImpacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskNonMoneyImpact>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactLevels", "RiskNonMoneyImpact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskNonMoneyImpact>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactLevels", "RiskNonMoneyImpact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_ImpactLevels", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_ImpactLevels", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_ImpactLevels", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskStates_ImpactLevels", "RiskState")]
        public EntityCollection<RiskState> RiskStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskState>("AskrindoMVCModel.FK_RiskStates_ImpactLevels", "RiskState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskState>("AskrindoMVCModel.FK_RiskStates_ImpactLevels", "RiskState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_ImpactLevels", "RiskMitigation")]
        public EntityCollection<RiskMitigation> RiskMitigations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_ImpactLevels", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_ImpactLevels", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="ImpactRef")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImpactRef : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImpactRef object.
        /// </summary>
        /// <param name="impactRefId">Initial value of the ImpactRefId property.</param>
        /// <param name="maxMoney">Initial value of the MaxMoney property.</param>
        /// <param name="hQPct">Initial value of the HQPct property.</param>
        /// <param name="branch1Pct">Initial value of the Branch1Pct property.</param>
        /// <param name="branch2Pct">Initial value of the Branch2Pct property.</param>
        /// <param name="branch3Pct">Initial value of the Branch3Pct property.</param>
        /// <param name="bizUnitPct">Initial value of the BizUnitPct property.</param>
        /// <param name="supportingHQPct">Initial value of the SupportingHQPct property.</param>
        /// <param name="supportingBranchPct">Initial value of the SupportingBranchPct property.</param>
        /// <param name="supportingBizUnitPct">Initial value of the SupportingBizUnitPct property.</param>
        public static ImpactRef CreateImpactRef(global::System.Int32 impactRefId, global::System.Decimal maxMoney, global::System.Decimal hQPct, global::System.Decimal branch1Pct, global::System.Decimal branch2Pct, global::System.Decimal branch3Pct, global::System.Decimal bizUnitPct, global::System.Decimal supportingHQPct, global::System.Decimal supportingBranchPct, global::System.Decimal supportingBizUnitPct)
        {
            ImpactRef impactRef = new ImpactRef();
            impactRef.ImpactRefId = impactRefId;
            impactRef.MaxMoney = maxMoney;
            impactRef.HQPct = hQPct;
            impactRef.Branch1Pct = branch1Pct;
            impactRef.Branch2Pct = branch2Pct;
            impactRef.Branch3Pct = branch3Pct;
            impactRef.BizUnitPct = bizUnitPct;
            impactRef.SupportingHQPct = supportingHQPct;
            impactRef.SupportingBranchPct = supportingBranchPct;
            impactRef.SupportingBizUnitPct = supportingBizUnitPct;
            return impactRef;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactRefId
        {
            get
            {
                return _ImpactRefId;
            }
            set
            {
                if (_ImpactRefId != value)
                {
                    OnImpactRefIdChanging(value);
                    ReportPropertyChanging("ImpactRefId");
                    _ImpactRefId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImpactRefId");
                    OnImpactRefIdChanged();
                }
            }
        }
        private global::System.Int32 _ImpactRefId;
        partial void OnImpactRefIdChanging(global::System.Int32 value);
        partial void OnImpactRefIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MaxMoney
        {
            get
            {
                return _MaxMoney;
            }
            set
            {
                OnMaxMoneyChanging(value);
                ReportPropertyChanging("MaxMoney");
                _MaxMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxMoney");
                OnMaxMoneyChanged();
            }
        }
        private global::System.Decimal _MaxMoney;
        partial void OnMaxMoneyChanging(global::System.Decimal value);
        partial void OnMaxMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HQPct
        {
            get
            {
                return _HQPct;
            }
            set
            {
                OnHQPctChanging(value);
                ReportPropertyChanging("HQPct");
                _HQPct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HQPct");
                OnHQPctChanged();
            }
        }
        private global::System.Decimal _HQPct;
        partial void OnHQPctChanging(global::System.Decimal value);
        partial void OnHQPctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Branch1Pct
        {
            get
            {
                return _Branch1Pct;
            }
            set
            {
                OnBranch1PctChanging(value);
                ReportPropertyChanging("Branch1Pct");
                _Branch1Pct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Branch1Pct");
                OnBranch1PctChanged();
            }
        }
        private global::System.Decimal _Branch1Pct;
        partial void OnBranch1PctChanging(global::System.Decimal value);
        partial void OnBranch1PctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Branch2Pct
        {
            get
            {
                return _Branch2Pct;
            }
            set
            {
                OnBranch2PctChanging(value);
                ReportPropertyChanging("Branch2Pct");
                _Branch2Pct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Branch2Pct");
                OnBranch2PctChanged();
            }
        }
        private global::System.Decimal _Branch2Pct;
        partial void OnBranch2PctChanging(global::System.Decimal value);
        partial void OnBranch2PctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Branch3Pct
        {
            get
            {
                return _Branch3Pct;
            }
            set
            {
                OnBranch3PctChanging(value);
                ReportPropertyChanging("Branch3Pct");
                _Branch3Pct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Branch3Pct");
                OnBranch3PctChanged();
            }
        }
        private global::System.Decimal _Branch3Pct;
        partial void OnBranch3PctChanging(global::System.Decimal value);
        partial void OnBranch3PctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BizUnitPct
        {
            get
            {
                return _BizUnitPct;
            }
            set
            {
                OnBizUnitPctChanging(value);
                ReportPropertyChanging("BizUnitPct");
                _BizUnitPct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BizUnitPct");
                OnBizUnitPctChanged();
            }
        }
        private global::System.Decimal _BizUnitPct;
        partial void OnBizUnitPctChanging(global::System.Decimal value);
        partial void OnBizUnitPctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SupportingHQPct
        {
            get
            {
                return _SupportingHQPct;
            }
            set
            {
                OnSupportingHQPctChanging(value);
                ReportPropertyChanging("SupportingHQPct");
                _SupportingHQPct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupportingHQPct");
                OnSupportingHQPctChanged();
            }
        }
        private global::System.Decimal _SupportingHQPct;
        partial void OnSupportingHQPctChanging(global::System.Decimal value);
        partial void OnSupportingHQPctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SupportingBranchPct
        {
            get
            {
                return _SupportingBranchPct;
            }
            set
            {
                OnSupportingBranchPctChanging(value);
                ReportPropertyChanging("SupportingBranchPct");
                _SupportingBranchPct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupportingBranchPct");
                OnSupportingBranchPctChanged();
            }
        }
        private global::System.Decimal _SupportingBranchPct;
        partial void OnSupportingBranchPctChanging(global::System.Decimal value);
        partial void OnSupportingBranchPctChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SupportingBizUnitPct
        {
            get
            {
                return _SupportingBizUnitPct;
            }
            set
            {
                OnSupportingBizUnitPctChanging(value);
                ReportPropertyChanging("SupportingBizUnitPct");
                _SupportingBizUnitPct = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupportingBizUnitPct");
                OnSupportingBizUnitPctChanged();
            }
        }
        private global::System.Decimal _SupportingBizUnitPct;
        partial void OnSupportingBizUnitPctChanging(global::System.Decimal value);
        partial void OnSupportingBizUnitPctChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="ImpactType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImpactType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImpactType object.
        /// </summary>
        /// <param name="impactTypeId">Initial value of the ImpactTypeId property.</param>
        /// <param name="impactCatId">Initial value of the ImpactCatId property.</param>
        /// <param name="impactTypeName">Initial value of the ImpactTypeName property.</param>
        public static ImpactType CreateImpactType(global::System.Int32 impactTypeId, global::System.Int32 impactCatId, global::System.String impactTypeName)
        {
            ImpactType impactType = new ImpactType();
            impactType.ImpactTypeId = impactTypeId;
            impactType.ImpactCatId = impactCatId;
            impactType.ImpactTypeName = impactTypeName;
            return impactType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactTypeId
        {
            get
            {
                return _ImpactTypeId;
            }
            set
            {
                if (_ImpactTypeId != value)
                {
                    OnImpactTypeIdChanging(value);
                    ReportPropertyChanging("ImpactTypeId");
                    _ImpactTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImpactTypeId");
                    OnImpactTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _ImpactTypeId;
        partial void OnImpactTypeIdChanging(global::System.Int32 value);
        partial void OnImpactTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactCatId
        {
            get
            {
                return _ImpactCatId;
            }
            set
            {
                OnImpactCatIdChanging(value);
                ReportPropertyChanging("ImpactCatId");
                _ImpactCatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactCatId");
                OnImpactCatIdChanged();
            }
        }
        private global::System.Int32 _ImpactCatId;
        partial void OnImpactCatIdChanging(global::System.Int32 value);
        partial void OnImpactCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImpactTypeName
        {
            get
            {
                return _ImpactTypeName;
            }
            set
            {
                OnImpactTypeNameChanging(value);
                ReportPropertyChanging("ImpactTypeName");
                _ImpactTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImpactTypeName");
                OnImpactTypeNameChanged();
            }
        }
        private global::System.String _ImpactTypeName;
        partial void OnImpactTypeNameChanging(global::System.String value);
        partial void OnImpactTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_ImpactTypes_ImpactCats", "ImpactCat")]
        public ImpactCat ImpactCat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactCat>("AskrindoMVCModel.FK_ImpactTypes_ImpactCats", "ImpactCat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactCat>("AskrindoMVCModel.FK_ImpactTypes_ImpactCats", "ImpactCat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactCat> ImpactCatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactCat>("AskrindoMVCModel.FK_ImpactTypes_ImpactCats", "ImpactCat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactCat>("AskrindoMVCModel.FK_ImpactTypes_ImpactCats", "ImpactCat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_ImpactDetails_ImpactTypes", "ImpactDetail")]
        public EntityCollection<ImpactDetail> ImpactDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImpactDetail>("AskrindoMVCModel.FK_ImpactDetails_ImpactTypes", "ImpactDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImpactDetail>("AskrindoMVCModel.FK_ImpactDetails_ImpactTypes", "ImpactDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_ImpactTypes", "RiskNonMoneyImpact")]
        public EntityCollection<RiskNonMoneyImpact> RiskNonMoneyImpacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskNonMoneyImpact>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactTypes", "RiskNonMoneyImpact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskNonMoneyImpact>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactTypes", "RiskNonMoneyImpact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="MitigationApproval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MitigationApproval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MitigationApproval object.
        /// </summary>
        /// <param name="approvalId">Initial value of the ApprovalId property.</param>
        /// <param name="mitigationId">Initial value of the MitigationId property.</param>
        /// <param name="orgPos">Initial value of the OrgPos property.</param>
        /// <param name="lastApproval">Initial value of the LastApproval property.</param>
        /// <param name="isReadOnly">Initial value of the IsReadOnly property.</param>
        public static MitigationApproval CreateMitigationApproval(global::System.Int32 approvalId, global::System.Int32 mitigationId, global::System.Int32 orgPos, global::System.Boolean lastApproval, global::System.Boolean isReadOnly)
        {
            MitigationApproval mitigationApproval = new MitigationApproval();
            mitigationApproval.ApprovalId = approvalId;
            mitigationApproval.MitigationId = mitigationId;
            mitigationApproval.OrgPos = orgPos;
            mitigationApproval.LastApproval = lastApproval;
            mitigationApproval.IsReadOnly = isReadOnly;
            return mitigationApproval;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApprovalId
        {
            get
            {
                return _ApprovalId;
            }
            set
            {
                if (_ApprovalId != value)
                {
                    OnApprovalIdChanging(value);
                    ReportPropertyChanging("ApprovalId");
                    _ApprovalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApprovalId");
                    OnApprovalIdChanged();
                }
            }
        }
        private global::System.Int32 _ApprovalId;
        partial void OnApprovalIdChanging(global::System.Int32 value);
        partial void OnApprovalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MitigationId
        {
            get
            {
                return _MitigationId;
            }
            set
            {
                OnMitigationIdChanging(value);
                ReportPropertyChanging("MitigationId");
                _MitigationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MitigationId");
                OnMitigationIdChanged();
            }
        }
        private global::System.Int32 _MitigationId;
        partial void OnMitigationIdChanging(global::System.Int32 value);
        partial void OnMitigationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrgPos
        {
            get
            {
                return _OrgPos;
            }
            set
            {
                OnOrgPosChanging(value);
                ReportPropertyChanging("OrgPos");
                _OrgPos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgPos");
                OnOrgPosChanged();
            }
        }
        private global::System.Int32 _OrgPos;
        partial void OnOrgPosChanging(global::System.Int32 value);
        partial void OnOrgPosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeptId
        {
            get
            {
                return _DeptId;
            }
            set
            {
                OnDeptIdChanging(value);
                ReportPropertyChanging("DeptId");
                _DeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptId");
                OnDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeptId;
        partial void OnDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDeptId
        {
            get
            {
                return _SubDeptId;
            }
            set
            {
                OnSubDeptIdChanging(value);
                ReportPropertyChanging("SubDeptId");
                _SubDeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDeptId");
                OnSubDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDeptId;
        partial void OnSubDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DivisionId;
        partial void OnDivisionIdChanging(Nullable<global::System.Int32> value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDivId
        {
            get
            {
                return _SubDivId;
            }
            set
            {
                OnSubDivIdChanging(value);
                ReportPropertyChanging("SubDivId");
                _SubDivId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDivId");
                OnSubDivIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDivId;
        partial void OnSubDivIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDivIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BranchId
        {
            get
            {
                return _BranchId;
            }
            set
            {
                OnBranchIdChanging(value);
                ReportPropertyChanging("BranchId");
                _BranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchId");
                OnBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BranchId;
        partial void OnBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubBranchId
        {
            get
            {
                return _SubBranchId;
            }
            set
            {
                OnSubBranchIdChanging(value);
                ReportPropertyChanging("SubBranchId");
                _SubBranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBranchId");
                OnSubBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubBranchId;
        partial void OnSubBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BizUnitId
        {
            get
            {
                return _BizUnitId;
            }
            set
            {
                OnBizUnitIdChanging(value);
                ReportPropertyChanging("BizUnitId");
                _BizUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BizUnitId");
                OnBizUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BizUnitId;
        partial void OnBizUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnBizUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrgName
        {
            get
            {
                return _OrgName;
            }
            set
            {
                OnOrgNameChanging(value);
                ReportPropertyChanging("OrgName");
                _OrgName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrgName");
                OnOrgNameChanged();
            }
        }
        private global::System.String _OrgName;
        partial void OnOrgNameChanging(global::System.String value);
        partial void OnOrgNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovalDate
        {
            get
            {
                return _ApprovalDate;
            }
            set
            {
                OnApprovalDateChanging(value);
                ReportPropertyChanging("ApprovalDate");
                _ApprovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovalDate");
                OnApprovalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovalDate;
        partial void OnApprovalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LimitDate
        {
            get
            {
                return _LimitDate;
            }
            set
            {
                OnLimitDateChanging(value);
                ReportPropertyChanging("LimitDate");
                _LimitDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitDate");
                OnLimitDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LimitDate;
        partial void OnLimitDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLimitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LastApproval
        {
            get
            {
                return _LastApproval;
            }
            set
            {
                OnLastApprovalChanging(value);
                ReportPropertyChanging("LastApproval");
                _LastApproval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastApproval");
                OnLastApprovalChanged();
            }
        }
        private global::System.Boolean _LastApproval;
        partial void OnLastApprovalChanging(global::System.Boolean value);
        partial void OnLastApprovalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReadOnly
        {
            get
            {
                return _IsReadOnly;
            }
            set
            {
                OnIsReadOnlyChanging(value);
                ReportPropertyChanging("IsReadOnly");
                _IsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnly");
                OnIsReadOnlyChanged();
            }
        }
        private global::System.Boolean _IsReadOnly;
        partial void OnIsReadOnlyChanging(global::System.Boolean value);
        partial void OnIsReadOnlyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_MitigationApprovals_UserInfos", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_MitigationApprovals_UserInfos", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_MitigationApprovals_UserInfos", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_MitigationApprovals_UserInfos", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("AskrindoMVCModel.FK_MitigationApprovals_UserInfos", "UserInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_MitigationApprovals_RiskMitigations", "RiskMitigation")]
        public RiskMitigation RiskMitigation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_MitigationApprovals_RiskMitigations", "RiskMitigation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_MitigationApprovals_RiskMitigations", "RiskMitigation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskMitigation> RiskMitigationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_MitigationApprovals_RiskMitigations", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_MitigationApprovals_RiskMitigations", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="MitigationAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MitigationAttachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MitigationAttachment object.
        /// </summary>
        /// <param name="attachId">Initial value of the AttachId property.</param>
        /// <param name="mitigationId">Initial value of the MitigationId property.</param>
        /// <param name="attachName">Initial value of the AttachName property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="contentType">Initial value of the ContentType property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        public static MitigationAttachment CreateMitigationAttachment(global::System.Int32 attachId, global::System.Int32 mitigationId, global::System.String attachName, global::System.String filename, global::System.String contentType, global::System.Byte[] data)
        {
            MitigationAttachment mitigationAttachment = new MitigationAttachment();
            mitigationAttachment.AttachId = attachId;
            mitigationAttachment.MitigationId = mitigationId;
            mitigationAttachment.AttachName = attachName;
            mitigationAttachment.Filename = filename;
            mitigationAttachment.ContentType = contentType;
            mitigationAttachment.Data = data;
            return mitigationAttachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttachId
        {
            get
            {
                return _AttachId;
            }
            set
            {
                if (_AttachId != value)
                {
                    OnAttachIdChanging(value);
                    ReportPropertyChanging("AttachId");
                    _AttachId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachId");
                    OnAttachIdChanged();
                }
            }
        }
        private global::System.Int32 _AttachId;
        partial void OnAttachIdChanging(global::System.Int32 value);
        partial void OnAttachIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MitigationId
        {
            get
            {
                return _MitigationId;
            }
            set
            {
                OnMitigationIdChanging(value);
                ReportPropertyChanging("MitigationId");
                _MitigationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MitigationId");
                OnMitigationIdChanged();
            }
        }
        private global::System.Int32 _MitigationId;
        partial void OnMitigationIdChanging(global::System.Int32 value);
        partial void OnMitigationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AttachName
        {
            get
            {
                return _AttachName;
            }
            set
            {
                OnAttachNameChanging(value);
                ReportPropertyChanging("AttachName");
                _AttachName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AttachName");
                OnAttachNameChanged();
            }
        }
        private global::System.String _AttachName;
        partial void OnAttachNameChanging(global::System.String value);
        partial void OnAttachNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContentLength
        {
            get
            {
                return _ContentLength;
            }
            set
            {
                OnContentLengthChanging(value);
                ReportPropertyChanging("ContentLength");
                _ContentLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentLength");
                OnContentLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _ContentLength;
        partial void OnContentLengthChanging(Nullable<global::System.Int32> value);
        partial void OnContentLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_MitigationAttachments_RiskMitigations", "RiskMitigation")]
        public RiskMitigation RiskMitigation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_MitigationAttachments_RiskMitigations", "RiskMitigation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_MitigationAttachments_RiskMitigations", "RiskMitigation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskMitigation> RiskMitigationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_MitigationAttachments_RiskMitigations", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_MitigationAttachments_RiskMitigations", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="MitigationCat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MitigationCat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MitigationCat object.
        /// </summary>
        /// <param name="mitigationCatId">Initial value of the MitigationCatId property.</param>
        /// <param name="mitigationCatName">Initial value of the MitigationCatName property.</param>
        public static MitigationCat CreateMitigationCat(global::System.Int32 mitigationCatId, global::System.String mitigationCatName)
        {
            MitigationCat mitigationCat = new MitigationCat();
            mitigationCat.MitigationCatId = mitigationCatId;
            mitigationCat.MitigationCatName = mitigationCatName;
            return mitigationCat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MitigationCatId
        {
            get
            {
                return _MitigationCatId;
            }
            set
            {
                if (_MitigationCatId != value)
                {
                    OnMitigationCatIdChanging(value);
                    ReportPropertyChanging("MitigationCatId");
                    _MitigationCatId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MitigationCatId");
                    OnMitigationCatIdChanged();
                }
            }
        }
        private global::System.Int32 _MitigationCatId;
        partial void OnMitigationCatIdChanging(global::System.Int32 value);
        partial void OnMitigationCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MitigationCatName
        {
            get
            {
                return _MitigationCatName;
            }
            set
            {
                OnMitigationCatNameChanging(value);
                ReportPropertyChanging("MitigationCatName");
                _MitigationCatName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MitigationCatName");
                OnMitigationCatNameChanged();
            }
        }
        private global::System.String _MitigationCatName;
        partial void OnMitigationCatNameChanging(global::System.String value);
        partial void OnMitigationCatNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_MitigationTypes_MitigationCats", "MitigationType")]
        public EntityCollection<MitigationType> MitigationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MitigationType>("AskrindoMVCModel.FK_MitigationTypes_MitigationCats", "MitigationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MitigationType>("AskrindoMVCModel.FK_MitigationTypes_MitigationCats", "MitigationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_MitigationCats", "RiskMitigation")]
        public EntityCollection<RiskMitigation> RiskMitigations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_MitigationCats", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_MitigationCats", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="MitigationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MitigationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MitigationType object.
        /// </summary>
        /// <param name="mitigationTypeId">Initial value of the MitigationTypeId property.</param>
        /// <param name="mitigationCatId">Initial value of the MitigationCatId property.</param>
        /// <param name="mitigationTypeName">Initial value of the MitigationTypeName property.</param>
        public static MitigationType CreateMitigationType(global::System.Int32 mitigationTypeId, global::System.Int32 mitigationCatId, global::System.String mitigationTypeName)
        {
            MitigationType mitigationType = new MitigationType();
            mitigationType.MitigationTypeId = mitigationTypeId;
            mitigationType.MitigationCatId = mitigationCatId;
            mitigationType.MitigationTypeName = mitigationTypeName;
            return mitigationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MitigationTypeId
        {
            get
            {
                return _MitigationTypeId;
            }
            set
            {
                if (_MitigationTypeId != value)
                {
                    OnMitigationTypeIdChanging(value);
                    ReportPropertyChanging("MitigationTypeId");
                    _MitigationTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MitigationTypeId");
                    OnMitigationTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _MitigationTypeId;
        partial void OnMitigationTypeIdChanging(global::System.Int32 value);
        partial void OnMitigationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MitigationCatId
        {
            get
            {
                return _MitigationCatId;
            }
            set
            {
                OnMitigationCatIdChanging(value);
                ReportPropertyChanging("MitigationCatId");
                _MitigationCatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MitigationCatId");
                OnMitigationCatIdChanged();
            }
        }
        private global::System.Int32 _MitigationCatId;
        partial void OnMitigationCatIdChanging(global::System.Int32 value);
        partial void OnMitigationCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MitigationTypeName
        {
            get
            {
                return _MitigationTypeName;
            }
            set
            {
                OnMitigationTypeNameChanging(value);
                ReportPropertyChanging("MitigationTypeName");
                _MitigationTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MitigationTypeName");
                OnMitigationTypeNameChanged();
            }
        }
        private global::System.String _MitigationTypeName;
        partial void OnMitigationTypeNameChanging(global::System.String value);
        partial void OnMitigationTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_MitigationTypes_MitigationCats", "MitigationCat")]
        public MitigationCat MitigationCat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MitigationCat>("AskrindoMVCModel.FK_MitigationTypes_MitigationCats", "MitigationCat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MitigationCat>("AskrindoMVCModel.FK_MitigationTypes_MitigationCats", "MitigationCat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MitigationCat> MitigationCatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MitigationCat>("AskrindoMVCModel.FK_MitigationTypes_MitigationCats", "MitigationCat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MitigationCat>("AskrindoMVCModel.FK_MitigationTypes_MitigationCats", "MitigationCat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_MitigationTypes", "RiskMitigation")]
        public EntityCollection<RiskMitigation> RiskMitigations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_MitigationTypes", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_MitigationTypes", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="MitigationUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MitigationUnit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MitigationUnit object.
        /// </summary>
        /// <param name="mitigationUnitId">Initial value of the MitigationUnitId property.</param>
        /// <param name="mitigationId">Initial value of the MitigationId property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        public static MitigationUnit CreateMitigationUnit(global::System.Int32 mitigationUnitId, global::System.Int32 mitigationId, global::System.Int32 divisionId)
        {
            MitigationUnit mitigationUnit = new MitigationUnit();
            mitigationUnit.MitigationUnitId = mitigationUnitId;
            mitigationUnit.MitigationId = mitigationId;
            mitigationUnit.DivisionId = divisionId;
            return mitigationUnit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MitigationUnitId
        {
            get
            {
                return _MitigationUnitId;
            }
            set
            {
                if (_MitigationUnitId != value)
                {
                    OnMitigationUnitIdChanging(value);
                    ReportPropertyChanging("MitigationUnitId");
                    _MitigationUnitId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MitigationUnitId");
                    OnMitigationUnitIdChanged();
                }
            }
        }
        private global::System.Int32 _MitigationUnitId;
        partial void OnMitigationUnitIdChanging(global::System.Int32 value);
        partial void OnMitigationUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MitigationId
        {
            get
            {
                return _MitigationId;
            }
            set
            {
                OnMitigationIdChanging(value);
                ReportPropertyChanging("MitigationId");
                _MitigationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MitigationId");
                OnMitigationIdChanged();
            }
        }
        private global::System.Int32 _MitigationId;
        partial void OnMitigationIdChanging(global::System.Int32 value);
        partial void OnMitigationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private global::System.Int32 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int32 value);
        partial void OnDivisionIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Mitigationunit2", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_Mitigationunit2", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_Mitigationunit2", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_Mitigationunit2", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("AskrindoMVCModel.FK_Mitigationunit2", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Mitigationunit1", "RiskMitigation")]
        public RiskMitigation RiskMitigation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_Mitigationunit1", "RiskMitigation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_Mitigationunit1", "RiskMitigation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskMitigation> RiskMitigationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_Mitigationunit1", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_Mitigationunit1", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="ProbLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProbLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProbLevel object.
        /// </summary>
        /// <param name="probLevelId">Initial value of the ProbLevelId property.</param>
        /// <param name="probLevelName">Initial value of the ProbLevelName property.</param>
        /// <param name="pctMin">Initial value of the PctMin property.</param>
        /// <param name="pctMax">Initial value of the PctMax property.</param>
        public static ProbLevel CreateProbLevel(global::System.Int32 probLevelId, global::System.String probLevelName, global::System.Int32 pctMin, global::System.Int32 pctMax)
        {
            ProbLevel probLevel = new ProbLevel();
            probLevel.ProbLevelId = probLevelId;
            probLevel.ProbLevelName = probLevelName;
            probLevel.PctMin = pctMin;
            probLevel.PctMax = pctMax;
            return probLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProbLevelId
        {
            get
            {
                return _ProbLevelId;
            }
            set
            {
                if (_ProbLevelId != value)
                {
                    OnProbLevelIdChanging(value);
                    ReportPropertyChanging("ProbLevelId");
                    _ProbLevelId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProbLevelId");
                    OnProbLevelIdChanged();
                }
            }
        }
        private global::System.Int32 _ProbLevelId;
        partial void OnProbLevelIdChanging(global::System.Int32 value);
        partial void OnProbLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProbLevelName
        {
            get
            {
                return _ProbLevelName;
            }
            set
            {
                OnProbLevelNameChanging(value);
                ReportPropertyChanging("ProbLevelName");
                _ProbLevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProbLevelName");
                OnProbLevelNameChanged();
            }
        }
        private global::System.String _ProbLevelName;
        partial void OnProbLevelNameChanging(global::System.String value);
        partial void OnProbLevelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PctMin
        {
            get
            {
                return _PctMin;
            }
            set
            {
                OnPctMinChanging(value);
                ReportPropertyChanging("PctMin");
                _PctMin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PctMin");
                OnPctMinChanged();
            }
        }
        private global::System.Int32 _PctMin;
        partial void OnPctMinChanging(global::System.Int32 value);
        partial void OnPctMinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PctMax
        {
            get
            {
                return _PctMax;
            }
            set
            {
                OnPctMaxChanging(value);
                ReportPropertyChanging("PctMax");
                _PctMax = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PctMax");
                OnPctMaxChanged();
            }
        }
        private global::System.Int32 _PctMax;
        partial void OnPctMaxChanging(global::System.Int32 value);
        partial void OnPctMaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionGeneral
        {
            get
            {
                return _DescriptionGeneral;
            }
            set
            {
                OnDescriptionGeneralChanging(value);
                ReportPropertyChanging("DescriptionGeneral");
                _DescriptionGeneral = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionGeneral");
                OnDescriptionGeneralChanged();
            }
        }
        private global::System.String _DescriptionGeneral;
        partial void OnDescriptionGeneralChanging(global::System.String value);
        partial void OnDescriptionGeneralChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescriptionProject
        {
            get
            {
                return _DescriptionProject;
            }
            set
            {
                OnDescriptionProjectChanging(value);
                ReportPropertyChanging("DescriptionProject");
                _DescriptionProject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescriptionProject");
                OnDescriptionProjectChanged();
            }
        }
        private global::System.String _DescriptionProject;
        partial void OnDescriptionProjectChanging(global::System.String value);
        partial void OnDescriptionProjectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskProbs_ProbLevels", "RiskProb")]
        public EntityCollection<RiskProb> RiskProbs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskProb>("AskrindoMVCModel.FK_RiskProbs_ProbLevels", "RiskProb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskProb>("AskrindoMVCModel.FK_RiskProbs_ProbLevels", "RiskProb", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_ProbLevels", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_ProbLevels", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_ProbLevels", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskStates_ProbLevels", "RiskState")]
        public EntityCollection<RiskState> RiskStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskState>("AskrindoMVCModel.FK_RiskStates_ProbLevels", "RiskState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskState>("AskrindoMVCModel.FK_RiskStates_ProbLevels", "RiskState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_ProbLevels", "RiskMitigation")]
        public EntityCollection<RiskMitigation> RiskMitigations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_ProbLevels", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_ProbLevels", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="Risk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Risk : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Risk object.
        /// </summary>
        /// <param name="riskId">Initial value of the RiskId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="riskCode">Initial value of the RiskCode property.</param>
        /// <param name="riskName">Initial value of the RiskName property.</param>
        /// <param name="riskDate">Initial value of the RiskDate property.</param>
        /// <param name="orgPos">Initial value of the OrgPos property.</param>
        /// <param name="isReadOnly">Initial value of the IsReadOnly property.</param>
        public static Risk CreateRisk(global::System.Int32 riskId, global::System.Guid userId, global::System.String riskCode, global::System.String riskName, global::System.DateTime riskDate, global::System.Int32 orgPos, global::System.Boolean isReadOnly)
        {
            Risk risk = new Risk();
            risk.RiskId = riskId;
            risk.UserId = userId;
            risk.RiskCode = riskCode;
            risk.RiskName = riskName;
            risk.RiskDate = riskDate;
            risk.OrgPos = orgPos;
            risk.IsReadOnly = isReadOnly;
            return risk;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskId
        {
            get
            {
                return _RiskId;
            }
            set
            {
                if (_RiskId != value)
                {
                    OnRiskIdChanging(value);
                    ReportPropertyChanging("RiskId");
                    _RiskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RiskId");
                    OnRiskIdChanged();
                }
            }
        }
        private global::System.Int32 _RiskId;
        partial void OnRiskIdChanging(global::System.Int32 value);
        partial void OnRiskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RiskCode
        {
            get
            {
                return _RiskCode;
            }
            set
            {
                OnRiskCodeChanging(value);
                ReportPropertyChanging("RiskCode");
                _RiskCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RiskCode");
                OnRiskCodeChanged();
            }
        }
        private global::System.String _RiskCode;
        partial void OnRiskCodeChanging(global::System.String value);
        partial void OnRiskCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RiskName
        {
            get
            {
                return _RiskName;
            }
            set
            {
                OnRiskNameChanging(value);
                ReportPropertyChanging("RiskName");
                _RiskName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RiskName");
                OnRiskNameChanged();
            }
        }
        private global::System.String _RiskName;
        partial void OnRiskNameChanging(global::System.String value);
        partial void OnRiskNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RiskDate
        {
            get
            {
                return _RiskDate;
            }
            set
            {
                OnRiskDateChanging(value);
                ReportPropertyChanging("RiskDate");
                _RiskDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskDate");
                OnRiskDateChanged();
            }
        }
        private global::System.DateTime _RiskDate;
        partial void OnRiskDateChanging(global::System.DateTime value);
        partial void OnRiskDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrgPos
        {
            get
            {
                return _OrgPos;
            }
            set
            {
                OnOrgPosChanging(value);
                ReportPropertyChanging("OrgPos");
                _OrgPos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgPos");
                OnOrgPosChanged();
            }
        }
        private global::System.Int32 _OrgPos;
        partial void OnOrgPosChanging(global::System.Int32 value);
        partial void OnOrgPosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeptId
        {
            get
            {
                return _DeptId;
            }
            set
            {
                OnDeptIdChanging(value);
                ReportPropertyChanging("DeptId");
                _DeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptId");
                OnDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeptId;
        partial void OnDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDeptId
        {
            get
            {
                return _SubDeptId;
            }
            set
            {
                OnSubDeptIdChanging(value);
                ReportPropertyChanging("SubDeptId");
                _SubDeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDeptId");
                OnSubDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDeptId;
        partial void OnSubDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DivisionId;
        partial void OnDivisionIdChanging(Nullable<global::System.Int32> value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDivId
        {
            get
            {
                return _SubDivId;
            }
            set
            {
                OnSubDivIdChanging(value);
                ReportPropertyChanging("SubDivId");
                _SubDivId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDivId");
                OnSubDivIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDivId;
        partial void OnSubDivIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDivIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BranchId
        {
            get
            {
                return _BranchId;
            }
            set
            {
                OnBranchIdChanging(value);
                ReportPropertyChanging("BranchId");
                _BranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchId");
                OnBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BranchId;
        partial void OnBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubBranchId
        {
            get
            {
                return _SubBranchId;
            }
            set
            {
                OnSubBranchIdChanging(value);
                ReportPropertyChanging("SubBranchId");
                _SubBranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBranchId");
                OnSubBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubBranchId;
        partial void OnSubBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BizUnitId
        {
            get
            {
                return _BizUnitId;
            }
            set
            {
                OnBizUnitIdChanging(value);
                ReportPropertyChanging("BizUnitId");
                _BizUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BizUnitId");
                OnBizUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BizUnitId;
        partial void OnBizUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnBizUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CauseGroupId
        {
            get
            {
                return _CauseGroupId;
            }
            set
            {
                OnCauseGroupIdChanging(value);
                ReportPropertyChanging("CauseGroupId");
                _CauseGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CauseGroupId");
                OnCauseGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CauseGroupId;
        partial void OnCauseGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnCauseGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CauseTypeId
        {
            get
            {
                return _CauseTypeId;
            }
            set
            {
                OnCauseTypeIdChanging(value);
                ReportPropertyChanging("CauseTypeId");
                _CauseTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CauseTypeId");
                OnCauseTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CauseTypeId;
        partial void OnCauseTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnCauseTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CauseId
        {
            get
            {
                return _CauseId;
            }
            set
            {
                OnCauseIdChanging(value);
                ReportPropertyChanging("CauseId");
                _CauseId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CauseId");
                OnCauseIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CauseId;
        partial void OnCauseIdChanging(Nullable<global::System.Int32> value);
        partial void OnCauseIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EffectGroupId
        {
            get
            {
                return _EffectGroupId;
            }
            set
            {
                OnEffectGroupIdChanging(value);
                ReportPropertyChanging("EffectGroupId");
                _EffectGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectGroupId");
                OnEffectGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EffectGroupId;
        partial void OnEffectGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnEffectGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EffectTypeId
        {
            get
            {
                return _EffectTypeId;
            }
            set
            {
                OnEffectTypeIdChanging(value);
                ReportPropertyChanging("EffectTypeId");
                _EffectTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectTypeId");
                OnEffectTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EffectTypeId;
        partial void OnEffectTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnEffectTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EffectId
        {
            get
            {
                return _EffectId;
            }
            set
            {
                OnEffectIdChanging(value);
                ReportPropertyChanging("EffectId");
                _EffectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectId");
                OnEffectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _EffectId;
        partial void OnEffectIdChanging(Nullable<global::System.Int32> value);
        partial void OnEffectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RiskCatId
        {
            get
            {
                return _RiskCatId;
            }
            set
            {
                OnRiskCatIdChanging(value);
                ReportPropertyChanging("RiskCatId");
                _RiskCatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskCatId");
                OnRiskCatIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RiskCatId;
        partial void OnRiskCatIdChanging(Nullable<global::System.Int32> value);
        partial void OnRiskCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RiskGroupId
        {
            get
            {
                return _RiskGroupId;
            }
            set
            {
                OnRiskGroupIdChanging(value);
                ReportPropertyChanging("RiskGroupId");
                _RiskGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskGroupId");
                OnRiskGroupIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RiskGroupId;
        partial void OnRiskGroupIdChanging(Nullable<global::System.Int32> value);
        partial void OnRiskGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RiskTypeId
        {
            get
            {
                return _RiskTypeId;
            }
            set
            {
                OnRiskTypeIdChanging(value);
                ReportPropertyChanging("RiskTypeId");
                _RiskTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskTypeId");
                OnRiskTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _RiskTypeId;
        partial void OnRiskTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnRiskTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ProbValue
        {
            get
            {
                return _ProbValue;
            }
            set
            {
                OnProbValueChanging(value);
                ReportPropertyChanging("ProbValue");
                _ProbValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProbValue");
                OnProbValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _ProbValue;
        partial void OnProbValueChanging(Nullable<global::System.Decimal> value);
        partial void OnProbValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProbLevelId
        {
            get
            {
                return _ProbLevelId;
            }
            set
            {
                OnProbLevelIdChanging(value);
                ReportPropertyChanging("ProbLevelId");
                _ProbLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProbLevelId");
                OnProbLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProbLevelId;
        partial void OnProbLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnProbLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ImpactLevelId
        {
            get
            {
                return _ImpactLevelId;
            }
            set
            {
                OnImpactLevelIdChanging(value);
                ReportPropertyChanging("ImpactLevelId");
                _ImpactLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactLevelId");
                OnImpactLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ImpactLevelId;
        partial void OnImpactLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnImpactLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ImpactMoney
        {
            get
            {
                return _ImpactMoney;
            }
            set
            {
                OnImpactMoneyChanging(value);
                ReportPropertyChanging("ImpactMoney");
                _ImpactMoney = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactMoney");
                OnImpactMoneyChanged();
            }
        }
        private Nullable<global::System.Decimal> _ImpactMoney;
        partial void OnImpactMoneyChanging(Nullable<global::System.Decimal> value);
        partial void OnImpactMoneyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RiskLevel
        {
            get
            {
                return _RiskLevel;
            }
            set
            {
                OnRiskLevelChanging(value);
                ReportPropertyChanging("RiskLevel");
                _RiskLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskLevel");
                OnRiskLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _RiskLevel;
        partial void OnRiskLevelChanging(Nullable<global::System.Int32> value);
        partial void OnRiskLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovalDate
        {
            get
            {
                return _ApprovalDate;
            }
            set
            {
                OnApprovalDateChanging(value);
                ReportPropertyChanging("ApprovalDate");
                _ApprovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovalDate");
                OnApprovalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovalDate;
        partial void OnApprovalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CloseDate
        {
            get
            {
                return _CloseDate;
            }
            set
            {
                OnCloseDateChanging(value);
                ReportPropertyChanging("CloseDate");
                _CloseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseDate");
                OnCloseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CloseDate;
        partial void OnCloseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReadOnly
        {
            get
            {
                return _IsReadOnly;
            }
            set
            {
                OnIsReadOnlyChanging(value);
                ReportPropertyChanging("IsReadOnly");
                _IsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnly");
                OnIsReadOnlyChanged();
            }
        }
        private global::System.Boolean _IsReadOnly;
        partial void OnIsReadOnlyChanging(global::System.Boolean value);
        partial void OnIsReadOnlyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_CauseGroups", "CauseGroup")]
        public CauseGroup CauseGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseGroup>("AskrindoMVCModel.FK_Risks_CauseGroups", "CauseGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseGroup>("AskrindoMVCModel.FK_Risks_CauseGroups", "CauseGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CauseGroup> CauseGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseGroup>("AskrindoMVCModel.FK_Risks_CauseGroups", "CauseGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CauseGroup>("AskrindoMVCModel.FK_Risks_CauseGroups", "CauseGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Causes", "Cause")]
        public Cause Cause
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cause>("AskrindoMVCModel.FK_Risks_Causes", "Cause").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cause>("AskrindoMVCModel.FK_Risks_Causes", "Cause").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cause> CauseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cause>("AskrindoMVCModel.FK_Risks_Causes", "Cause");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cause>("AskrindoMVCModel.FK_Risks_Causes", "Cause", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_CauseTypes", "CauseType")]
        public CauseType CauseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseType>("AskrindoMVCModel.FK_Risks_CauseTypes", "CauseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseType>("AskrindoMVCModel.FK_Risks_CauseTypes", "CauseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CauseType> CauseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CauseType>("AskrindoMVCModel.FK_Risks_CauseTypes", "CauseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CauseType>("AskrindoMVCModel.FK_Risks_CauseTypes", "CauseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Depts", "Dept")]
        public Dept Dept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_Risks_Depts", "Dept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_Risks_Depts", "Dept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dept> DeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_Risks_Depts", "Dept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dept>("AskrindoMVCModel.FK_Risks_Depts", "Dept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_EffectGroups", "EffectGroup")]
        public EffectGroup EffectGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectGroup>("AskrindoMVCModel.FK_Risks_EffectGroups", "EffectGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectGroup>("AskrindoMVCModel.FK_Risks_EffectGroups", "EffectGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EffectGroup> EffectGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectGroup>("AskrindoMVCModel.FK_Risks_EffectGroups", "EffectGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EffectGroup>("AskrindoMVCModel.FK_Risks_EffectGroups", "EffectGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Effects", "Effect")]
        public Effect Effect
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Effect>("AskrindoMVCModel.FK_Risks_Effects", "Effect").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Effect>("AskrindoMVCModel.FK_Risks_Effects", "Effect").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Effect> EffectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Effect>("AskrindoMVCModel.FK_Risks_Effects", "Effect");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Effect>("AskrindoMVCModel.FK_Risks_Effects", "Effect", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_EffectTypes", "EffectType")]
        public EffectType EffectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectType>("AskrindoMVCModel.FK_Risks_EffectTypes", "EffectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectType>("AskrindoMVCModel.FK_Risks_EffectTypes", "EffectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EffectType> EffectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EffectType>("AskrindoMVCModel.FK_Risks_EffectTypes", "EffectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EffectType>("AskrindoMVCModel.FK_Risks_EffectTypes", "EffectType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_ImpactLevels", "ImpactLevel")]
        public ImpactLevel ImpactLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_Risks_ImpactLevels", "ImpactLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_Risks_ImpactLevels", "ImpactLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactLevel> ImpactLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_Risks_ImpactLevels", "ImpactLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_Risks_ImpactLevels", "ImpactLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_ProbLevels", "ProbLevel")]
        public ProbLevel ProbLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_Risks_ProbLevels", "ProbLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_Risks_ProbLevels", "ProbLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProbLevel> ProbLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_Risks_ProbLevels", "ProbLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProbLevel>("AskrindoMVCModel.FK_Risks_ProbLevels", "ProbLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_Risks", "RiskApproval")]
        public EntityCollection<RiskApproval> RiskApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_Risks", "RiskApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_Risks", "RiskApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskAttachments_Risks", "RiskAttachment")]
        public EntityCollection<RiskAttachment> RiskAttachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskAttachment>("AskrindoMVCModel.FK_RiskAttachments_Risks", "RiskAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskAttachment>("AskrindoMVCModel.FK_RiskAttachments_Risks", "RiskAttachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_RiskCats", "RiskCat")]
        public RiskCat RiskCat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskCat>("AskrindoMVCModel.FK_Risks_RiskCats", "RiskCat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskCat>("AskrindoMVCModel.FK_Risks_RiskCats", "RiskCat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskCat> RiskCatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskCat>("AskrindoMVCModel.FK_Risks_RiskCats", "RiskCat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskCat>("AskrindoMVCModel.FK_Risks_RiskCats", "RiskCat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_RiskGroups", "RiskGroup")]
        public RiskGroup RiskGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskGroup>("AskrindoMVCModel.FK_Risks_RiskGroups", "RiskGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskGroup>("AskrindoMVCModel.FK_Risks_RiskGroups", "RiskGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskGroup> RiskGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskGroup>("AskrindoMVCModel.FK_Risks_RiskGroups", "RiskGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskGroup>("AskrindoMVCModel.FK_Risks_RiskGroups", "RiskGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskImpacts_Risks", "RiskImpact")]
        public RiskImpact RiskImpact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskImpact>("AskrindoMVCModel.FK_RiskImpacts_Risks", "RiskImpact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskImpact>("AskrindoMVCModel.FK_RiskImpacts_Risks", "RiskImpact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskImpact> RiskImpactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskImpact>("AskrindoMVCModel.FK_RiskImpacts_Risks", "RiskImpact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskImpact>("AskrindoMVCModel.FK_RiskImpacts_Risks", "RiskImpact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_Risks", "RiskNonMoneyImpact")]
        public EntityCollection<RiskNonMoneyImpact> RiskNonMoneyImpacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskNonMoneyImpact>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_Risks", "RiskNonMoneyImpact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskNonMoneyImpact>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_Risks", "RiskNonMoneyImpact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskProbs_Risks", "RiskProb")]
        public RiskProb RiskProb
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskProb>("AskrindoMVCModel.FK_RiskProbs_Risks", "RiskProb").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskProb>("AskrindoMVCModel.FK_RiskProbs_Risks", "RiskProb").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskProb> RiskProbReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskProb>("AskrindoMVCModel.FK_RiskProbs_Risks", "RiskProb");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskProb>("AskrindoMVCModel.FK_RiskProbs_Risks", "RiskProb", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_RiskTypes", "RiskType")]
        public RiskType RiskType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskType>("AskrindoMVCModel.FK_Risks_RiskTypes", "RiskType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskType>("AskrindoMVCModel.FK_Risks_RiskTypes", "RiskType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskType> RiskTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskType>("AskrindoMVCModel.FK_Risks_RiskTypes", "RiskType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskType>("AskrindoMVCModel.FK_Risks_RiskTypes", "RiskType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_UserInfos", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_Risks_UserInfos", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_Risks_UserInfos", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_Risks_UserInfos", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("AskrindoMVCModel.FK_Risks_UserInfos", "UserInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_SubDepts", "SubDept")]
        public SubDept SubDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDept>("AskrindoMVCModel.FK_Risks_SubDepts", "SubDept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDept>("AskrindoMVCModel.FK_Risks_SubDepts", "SubDept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubDept> SubDeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDept>("AskrindoMVCModel.FK_Risks_SubDepts", "SubDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubDept>("AskrindoMVCModel.FK_Risks_SubDepts", "SubDept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Divisions", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_Risks_Divisions", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_Risks_Divisions", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_Risks_Divisions", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("AskrindoMVCModel.FK_Risks_Divisions", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_SubDivs", "SubDiv")]
        public SubDiv SubDiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDiv>("AskrindoMVCModel.FK_Risks_SubDivs", "SubDiv").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDiv>("AskrindoMVCModel.FK_Risks_SubDivs", "SubDiv").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubDiv> SubDivReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDiv>("AskrindoMVCModel.FK_Risks_SubDivs", "SubDiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubDiv>("AskrindoMVCModel.FK_Risks_SubDivs", "SubDiv", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_Branches", "Branch")]
        public Branch Branch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_Risks_Branches", "Branch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_Risks_Branches", "Branch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> BranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_Risks_Branches", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("AskrindoMVCModel.FK_Risks_Branches", "Branch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_SubBranches", "SubBranch")]
        public SubBranch SubBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubBranch>("AskrindoMVCModel.FK_Risks_SubBranches", "SubBranch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubBranch>("AskrindoMVCModel.FK_Risks_SubBranches", "SubBranch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubBranch> SubBranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubBranch>("AskrindoMVCModel.FK_Risks_SubBranches", "SubBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubBranch>("AskrindoMVCModel.FK_Risks_SubBranches", "SubBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_BizUnits", "BizUnit")]
        public BizUnit BizUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BizUnit>("AskrindoMVCModel.FK_Risks_BizUnits", "BizUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BizUnit>("AskrindoMVCModel.FK_Risks_BizUnits", "BizUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BizUnit> BizUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BizUnit>("AskrindoMVCModel.FK_Risks_BizUnits", "BizUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BizUnit>("AskrindoMVCModel.FK_Risks_BizUnits", "BizUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskStates_Risks", "RiskState")]
        public EntityCollection<RiskState> RiskStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskState>("AskrindoMVCModel.FK_RiskStates_Risks", "RiskState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskState>("AskrindoMVCModel.FK_RiskStates_Risks", "RiskState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_Risks", "RiskMitigation")]
        public EntityCollection<RiskMitigation> RiskMitigations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_Risks", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_Risks", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskApproval")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskApproval : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskApproval object.
        /// </summary>
        /// <param name="approvalId">Initial value of the ApprovalId property.</param>
        /// <param name="riskId">Initial value of the RiskId property.</param>
        /// <param name="orgPos">Initial value of the OrgPos property.</param>
        /// <param name="lastApproval">Initial value of the LastApproval property.</param>
        /// <param name="isReadOnly">Initial value of the IsReadOnly property.</param>
        public static RiskApproval CreateRiskApproval(global::System.Int32 approvalId, global::System.Int32 riskId, global::System.Int32 orgPos, global::System.Boolean lastApproval, global::System.Boolean isReadOnly)
        {
            RiskApproval riskApproval = new RiskApproval();
            riskApproval.ApprovalId = approvalId;
            riskApproval.RiskId = riskId;
            riskApproval.OrgPos = orgPos;
            riskApproval.LastApproval = lastApproval;
            riskApproval.IsReadOnly = isReadOnly;
            return riskApproval;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ApprovalId
        {
            get
            {
                return _ApprovalId;
            }
            set
            {
                if (_ApprovalId != value)
                {
                    OnApprovalIdChanging(value);
                    ReportPropertyChanging("ApprovalId");
                    _ApprovalId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApprovalId");
                    OnApprovalIdChanged();
                }
            }
        }
        private global::System.Int32 _ApprovalId;
        partial void OnApprovalIdChanging(global::System.Int32 value);
        partial void OnApprovalIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskId
        {
            get
            {
                return _RiskId;
            }
            set
            {
                OnRiskIdChanging(value);
                ReportPropertyChanging("RiskId");
                _RiskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskId");
                OnRiskIdChanged();
            }
        }
        private global::System.Int32 _RiskId;
        partial void OnRiskIdChanging(global::System.Int32 value);
        partial void OnRiskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrgPos
        {
            get
            {
                return _OrgPos;
            }
            set
            {
                OnOrgPosChanging(value);
                ReportPropertyChanging("OrgPos");
                _OrgPos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgPos");
                OnOrgPosChanged();
            }
        }
        private global::System.Int32 _OrgPos;
        partial void OnOrgPosChanging(global::System.Int32 value);
        partial void OnOrgPosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeptId
        {
            get
            {
                return _DeptId;
            }
            set
            {
                OnDeptIdChanging(value);
                ReportPropertyChanging("DeptId");
                _DeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptId");
                OnDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeptId;
        partial void OnDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDeptId
        {
            get
            {
                return _SubDeptId;
            }
            set
            {
                OnSubDeptIdChanging(value);
                ReportPropertyChanging("SubDeptId");
                _SubDeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDeptId");
                OnSubDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDeptId;
        partial void OnSubDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DivisionId;
        partial void OnDivisionIdChanging(Nullable<global::System.Int32> value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDivId
        {
            get
            {
                return _SubDivId;
            }
            set
            {
                OnSubDivIdChanging(value);
                ReportPropertyChanging("SubDivId");
                _SubDivId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDivId");
                OnSubDivIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDivId;
        partial void OnSubDivIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDivIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BranchId
        {
            get
            {
                return _BranchId;
            }
            set
            {
                OnBranchIdChanging(value);
                ReportPropertyChanging("BranchId");
                _BranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchId");
                OnBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BranchId;
        partial void OnBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubBranchId
        {
            get
            {
                return _SubBranchId;
            }
            set
            {
                OnSubBranchIdChanging(value);
                ReportPropertyChanging("SubBranchId");
                _SubBranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBranchId");
                OnSubBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubBranchId;
        partial void OnSubBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BizUnitId
        {
            get
            {
                return _BizUnitId;
            }
            set
            {
                OnBizUnitIdChanging(value);
                ReportPropertyChanging("BizUnitId");
                _BizUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BizUnitId");
                OnBizUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BizUnitId;
        partial void OnBizUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnBizUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrgName
        {
            get
            {
                return _OrgName;
            }
            set
            {
                OnOrgNameChanging(value);
                ReportPropertyChanging("OrgName");
                _OrgName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrgName");
                OnOrgNameChanged();
            }
        }
        private global::System.String _OrgName;
        partial void OnOrgNameChanging(global::System.String value);
        partial void OnOrgNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovalDate
        {
            get
            {
                return _ApprovalDate;
            }
            set
            {
                OnApprovalDateChanging(value);
                ReportPropertyChanging("ApprovalDate");
                _ApprovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovalDate");
                OnApprovalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovalDate;
        partial void OnApprovalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LimitDate
        {
            get
            {
                return _LimitDate;
            }
            set
            {
                OnLimitDateChanging(value);
                ReportPropertyChanging("LimitDate");
                _LimitDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitDate");
                OnLimitDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LimitDate;
        partial void OnLimitDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLimitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LastApproval
        {
            get
            {
                return _LastApproval;
            }
            set
            {
                OnLastApprovalChanging(value);
                ReportPropertyChanging("LastApproval");
                _LastApproval = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastApproval");
                OnLastApprovalChanged();
            }
        }
        private global::System.Boolean _LastApproval;
        partial void OnLastApprovalChanging(global::System.Boolean value);
        partial void OnLastApprovalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReadOnly
        {
            get
            {
                return _IsReadOnly;
            }
            set
            {
                OnIsReadOnlyChanging(value);
                ReportPropertyChanging("IsReadOnly");
                _IsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnly");
                OnIsReadOnlyChanged();
            }
        }
        private global::System.Boolean _IsReadOnly;
        partial void OnIsReadOnlyChanging(global::System.Boolean value);
        partial void OnIsReadOnlyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_Depts", "Dept")]
        public Dept Dept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_RiskApprovals_Depts", "Dept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_RiskApprovals_Depts", "Dept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dept> DeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_RiskApprovals_Depts", "Dept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dept>("AskrindoMVCModel.FK_RiskApprovals_Depts", "Dept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_Risks", "Risk")]
        public Risk Risk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskApprovals_Risks", "Risk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskApprovals_Risks", "Risk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Risk> RiskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskApprovals_Risks", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Risk>("AskrindoMVCModel.FK_RiskApprovals_Risks", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_UserInfos", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_RiskApprovals_UserInfos", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_RiskApprovals_UserInfos", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_RiskApprovals_UserInfos", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("AskrindoMVCModel.FK_RiskApprovals_UserInfos", "UserInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_SubDepts", "SubDept")]
        public SubDept SubDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDept>("AskrindoMVCModel.FK_RiskApprovals_SubDepts", "SubDept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDept>("AskrindoMVCModel.FK_RiskApprovals_SubDepts", "SubDept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubDept> SubDeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDept>("AskrindoMVCModel.FK_RiskApprovals_SubDepts", "SubDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubDept>("AskrindoMVCModel.FK_RiskApprovals_SubDepts", "SubDept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_Divisions", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_RiskApprovals_Divisions", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_RiskApprovals_Divisions", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_RiskApprovals_Divisions", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("AskrindoMVCModel.FK_RiskApprovals_Divisions", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_SubDivs", "SubDiv")]
        public SubDiv SubDiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDiv>("AskrindoMVCModel.FK_RiskApprovals_SubDivs", "SubDiv").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDiv>("AskrindoMVCModel.FK_RiskApprovals_SubDivs", "SubDiv").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubDiv> SubDivReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDiv>("AskrindoMVCModel.FK_RiskApprovals_SubDivs", "SubDiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubDiv>("AskrindoMVCModel.FK_RiskApprovals_SubDivs", "SubDiv", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_Branches", "Branch")]
        public Branch Branch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_RiskApprovals_Branches", "Branch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_RiskApprovals_Branches", "Branch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> BranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_RiskApprovals_Branches", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("AskrindoMVCModel.FK_RiskApprovals_Branches", "Branch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_SubBranches", "SubBranch")]
        public SubBranch SubBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubBranch>("AskrindoMVCModel.FK_RiskApprovals_SubBranches", "SubBranch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubBranch>("AskrindoMVCModel.FK_RiskApprovals_SubBranches", "SubBranch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubBranch> SubBranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubBranch>("AskrindoMVCModel.FK_RiskApprovals_SubBranches", "SubBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubBranch>("AskrindoMVCModel.FK_RiskApprovals_SubBranches", "SubBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_BizUnits", "BizUnit")]
        public BizUnit BizUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BizUnit>("AskrindoMVCModel.FK_RiskApprovals_BizUnits", "BizUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BizUnit>("AskrindoMVCModel.FK_RiskApprovals_BizUnits", "BizUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BizUnit> BizUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BizUnit>("AskrindoMVCModel.FK_RiskApprovals_BizUnits", "BizUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BizUnit>("AskrindoMVCModel.FK_RiskApprovals_BizUnits", "BizUnit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskAttachment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskAttachment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskAttachment object.
        /// </summary>
        /// <param name="attachId">Initial value of the AttachId property.</param>
        /// <param name="riskId">Initial value of the RiskId property.</param>
        /// <param name="attachName">Initial value of the AttachName property.</param>
        /// <param name="filename">Initial value of the Filename property.</param>
        /// <param name="contentType">Initial value of the ContentType property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        public static RiskAttachment CreateRiskAttachment(global::System.Int32 attachId, global::System.Int32 riskId, global::System.String attachName, global::System.String filename, global::System.String contentType, global::System.Byte[] data)
        {
            RiskAttachment riskAttachment = new RiskAttachment();
            riskAttachment.AttachId = attachId;
            riskAttachment.RiskId = riskId;
            riskAttachment.AttachName = attachName;
            riskAttachment.Filename = filename;
            riskAttachment.ContentType = contentType;
            riskAttachment.Data = data;
            return riskAttachment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AttachId
        {
            get
            {
                return _AttachId;
            }
            set
            {
                if (_AttachId != value)
                {
                    OnAttachIdChanging(value);
                    ReportPropertyChanging("AttachId");
                    _AttachId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttachId");
                    OnAttachIdChanged();
                }
            }
        }
        private global::System.Int32 _AttachId;
        partial void OnAttachIdChanging(global::System.Int32 value);
        partial void OnAttachIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskId
        {
            get
            {
                return _RiskId;
            }
            set
            {
                OnRiskIdChanging(value);
                ReportPropertyChanging("RiskId");
                _RiskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskId");
                OnRiskIdChanged();
            }
        }
        private global::System.Int32 _RiskId;
        partial void OnRiskIdChanging(global::System.Int32 value);
        partial void OnRiskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AttachName
        {
            get
            {
                return _AttachName;
            }
            set
            {
                OnAttachNameChanging(value);
                ReportPropertyChanging("AttachName");
                _AttachName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AttachName");
                OnAttachNameChanged();
            }
        }
        private global::System.String _AttachName;
        partial void OnAttachNameChanging(global::System.String value);
        partial void OnAttachNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filename
        {
            get
            {
                return _Filename;
            }
            set
            {
                OnFilenameChanging(value);
                ReportPropertyChanging("Filename");
                _Filename = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filename");
                OnFilenameChanged();
            }
        }
        private global::System.String _Filename;
        partial void OnFilenameChanging(global::System.String value);
        partial void OnFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContentLength
        {
            get
            {
                return _ContentLength;
            }
            set
            {
                OnContentLengthChanging(value);
                ReportPropertyChanging("ContentLength");
                _ContentLength = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContentLength");
                OnContentLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _ContentLength;
        partial void OnContentLengthChanging(Nullable<global::System.Int32> value);
        partial void OnContentLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Data
        {
            get
            {
                return StructuralObject.GetValidValue(_Data);
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.Byte[] _Data;
        partial void OnDataChanging(global::System.Byte[] value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskAttachments_Risks", "Risk")]
        public Risk Risk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskAttachments_Risks", "Risk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskAttachments_Risks", "Risk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Risk> RiskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskAttachments_Risks", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Risk>("AskrindoMVCModel.FK_RiskAttachments_Risks", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskCat")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskCat : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskCat object.
        /// </summary>
        /// <param name="riskCatId">Initial value of the RiskCatId property.</param>
        /// <param name="riskCatName">Initial value of the RiskCatName property.</param>
        public static RiskCat CreateRiskCat(global::System.Int32 riskCatId, global::System.String riskCatName)
        {
            RiskCat riskCat = new RiskCat();
            riskCat.RiskCatId = riskCatId;
            riskCat.RiskCatName = riskCatName;
            return riskCat;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskCatId
        {
            get
            {
                return _RiskCatId;
            }
            set
            {
                if (_RiskCatId != value)
                {
                    OnRiskCatIdChanging(value);
                    ReportPropertyChanging("RiskCatId");
                    _RiskCatId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RiskCatId");
                    OnRiskCatIdChanged();
                }
            }
        }
        private global::System.Int32 _RiskCatId;
        partial void OnRiskCatIdChanging(global::System.Int32 value);
        partial void OnRiskCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RiskCatName
        {
            get
            {
                return _RiskCatName;
            }
            set
            {
                OnRiskCatNameChanging(value);
                ReportPropertyChanging("RiskCatName");
                _RiskCatName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RiskCatName");
                OnRiskCatNameChanged();
            }
        }
        private global::System.String _RiskCatName;
        partial void OnRiskCatNameChanging(global::System.String value);
        partial void OnRiskCatNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskGroups_RiskCats", "RiskGroups")]
        public EntityCollection<RiskGroup> RiskGroups
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskGroup>("AskrindoMVCModel.FK_RiskGroups_RiskCats", "RiskGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskGroup>("AskrindoMVCModel.FK_RiskGroups_RiskCats", "RiskGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_RiskCats", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_RiskCats", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_RiskCats", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskEvent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskEvent object.
        /// </summary>
        /// <param name="riskEventID">Initial value of the RiskEventID property.</param>
        public static RiskEvent CreateRiskEvent(global::System.Int32 riskEventID)
        {
            RiskEvent riskEvent = new RiskEvent();
            riskEvent.RiskEventID = riskEventID;
            return riskEvent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskEventID
        {
            get
            {
                return _RiskEventID;
            }
            set
            {
                if (_RiskEventID != value)
                {
                    OnRiskEventIDChanging(value);
                    ReportPropertyChanging("RiskEventID");
                    _RiskEventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RiskEventID");
                    OnRiskEventIDChanged();
                }
            }
        }
        private global::System.Int32 _RiskEventID;
        partial void OnRiskEventIDChanging(global::System.Int32 value);
        partial void OnRiskEventIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RiskEvent1
        {
            get
            {
                return _RiskEvent1;
            }
            set
            {
                OnRiskEvent1Changing(value);
                ReportPropertyChanging("RiskEvent1");
                _RiskEvent1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RiskEvent1");
                OnRiskEvent1Changed();
            }
        }
        private global::System.String _RiskEvent1;
        partial void OnRiskEvent1Changing(global::System.String value);
        partial void OnRiskEvent1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskGroup object.
        /// </summary>
        /// <param name="riskGroupId">Initial value of the RiskGroupId property.</param>
        /// <param name="riskCatId">Initial value of the RiskCatId property.</param>
        /// <param name="riskGroupName">Initial value of the RiskGroupName property.</param>
        public static RiskGroup CreateRiskGroup(global::System.Int32 riskGroupId, global::System.Int32 riskCatId, global::System.String riskGroupName)
        {
            RiskGroup riskGroup = new RiskGroup();
            riskGroup.RiskGroupId = riskGroupId;
            riskGroup.RiskCatId = riskCatId;
            riskGroup.RiskGroupName = riskGroupName;
            return riskGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskGroupId
        {
            get
            {
                return _RiskGroupId;
            }
            set
            {
                if (_RiskGroupId != value)
                {
                    OnRiskGroupIdChanging(value);
                    ReportPropertyChanging("RiskGroupId");
                    _RiskGroupId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RiskGroupId");
                    OnRiskGroupIdChanged();
                }
            }
        }
        private global::System.Int32 _RiskGroupId;
        partial void OnRiskGroupIdChanging(global::System.Int32 value);
        partial void OnRiskGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskCatId
        {
            get
            {
                return _RiskCatId;
            }
            set
            {
                OnRiskCatIdChanging(value);
                ReportPropertyChanging("RiskCatId");
                _RiskCatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskCatId");
                OnRiskCatIdChanged();
            }
        }
        private global::System.Int32 _RiskCatId;
        partial void OnRiskCatIdChanging(global::System.Int32 value);
        partial void OnRiskCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RiskGroupName
        {
            get
            {
                return _RiskGroupName;
            }
            set
            {
                OnRiskGroupNameChanging(value);
                ReportPropertyChanging("RiskGroupName");
                _RiskGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RiskGroupName");
                OnRiskGroupNameChanged();
            }
        }
        private global::System.String _RiskGroupName;
        partial void OnRiskGroupNameChanging(global::System.String value);
        partial void OnRiskGroupNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskGroups_RiskCats", "RiskCats")]
        public RiskCat RiskCat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskCat>("AskrindoMVCModel.FK_RiskGroups_RiskCats", "RiskCats").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskCat>("AskrindoMVCModel.FK_RiskGroups_RiskCats", "RiskCats").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskCat> RiskCatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskCat>("AskrindoMVCModel.FK_RiskGroups_RiskCats", "RiskCats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskCat>("AskrindoMVCModel.FK_RiskGroups_RiskCats", "RiskCats", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskTypes_RiskGroups", "RiskTypes")]
        public EntityCollection<RiskType> RiskTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskType>("AskrindoMVCModel.FK_RiskTypes_RiskGroups", "RiskTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskType>("AskrindoMVCModel.FK_RiskTypes_RiskGroups", "RiskTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_RiskGroups", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_RiskGroups", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_RiskGroups", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskImpact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskImpact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskImpact object.
        /// </summary>
        /// <param name="riskId">Initial value of the RiskId property.</param>
        /// <param name="isMoneyImpact">Initial value of the IsMoneyImpact property.</param>
        public static RiskImpact CreateRiskImpact(global::System.Int32 riskId, global::System.Boolean isMoneyImpact)
        {
            RiskImpact riskImpact = new RiskImpact();
            riskImpact.RiskId = riskId;
            riskImpact.IsMoneyImpact = isMoneyImpact;
            return riskImpact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskId
        {
            get
            {
                return _RiskId;
            }
            set
            {
                if (_RiskId != value)
                {
                    OnRiskIdChanging(value);
                    ReportPropertyChanging("RiskId");
                    _RiskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RiskId");
                    OnRiskIdChanged();
                }
            }
        }
        private global::System.Int32 _RiskId;
        partial void OnRiskIdChanging(global::System.Int32 value);
        partial void OnRiskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMoneyImpact
        {
            get
            {
                return _IsMoneyImpact;
            }
            set
            {
                OnIsMoneyImpactChanging(value);
                ReportPropertyChanging("IsMoneyImpact");
                _IsMoneyImpact = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMoneyImpact");
                OnIsMoneyImpactChanged();
            }
        }
        private global::System.Boolean _IsMoneyImpact;
        partial void OnIsMoneyImpactChanging(global::System.Boolean value);
        partial void OnIsMoneyImpactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MoneyDirect
        {
            get
            {
                return _MoneyDirect;
            }
            set
            {
                OnMoneyDirectChanging(value);
                ReportPropertyChanging("MoneyDirect");
                _MoneyDirect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MoneyDirect");
                OnMoneyDirectChanged();
            }
        }
        private Nullable<global::System.Decimal> _MoneyDirect;
        partial void OnMoneyDirectChanging(Nullable<global::System.Decimal> value);
        partial void OnMoneyDirectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> MoneyIndirect
        {
            get
            {
                return _MoneyIndirect;
            }
            set
            {
                OnMoneyIndirectChanging(value);
                ReportPropertyChanging("MoneyIndirect");
                _MoneyIndirect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MoneyIndirect");
                OnMoneyIndirectChanged();
            }
        }
        private Nullable<global::System.Decimal> _MoneyIndirect;
        partial void OnMoneyIndirectChanging(Nullable<global::System.Decimal> value);
        partial void OnMoneyIndirectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ImpactLevelId
        {
            get
            {
                return _ImpactLevelId;
            }
            set
            {
                OnImpactLevelIdChanging(value);
                ReportPropertyChanging("ImpactLevelId");
                _ImpactLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactLevelId");
                OnImpactLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ImpactLevelId;
        partial void OnImpactLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnImpactLevelIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskImpacts_ImpactLevels", "ImpactLevel")]
        public ImpactLevel ImpactLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskImpacts_ImpactLevels", "ImpactLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskImpacts_ImpactLevels", "ImpactLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactLevel> ImpactLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskImpacts_ImpactLevels", "ImpactLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskImpacts_ImpactLevels", "ImpactLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskImpacts_Risks", "Risk")]
        public Risk Risk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskImpacts_Risks", "Risk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskImpacts_Risks", "Risk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Risk> RiskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskImpacts_Risks", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Risk>("AskrindoMVCModel.FK_RiskImpacts_Risks", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskLevel object.
        /// </summary>
        /// <param name="levelId">Initial value of the LevelId property.</param>
        /// <param name="levelName">Initial value of the LevelName property.</param>
        /// <param name="minValue">Initial value of the MinValue property.</param>
        /// <param name="maxValue">Initial value of the MaxValue property.</param>
        public static RiskLevel CreateRiskLevel(global::System.Int32 levelId, global::System.String levelName, global::System.Int32 minValue, global::System.Int32 maxValue)
        {
            RiskLevel riskLevel = new RiskLevel();
            riskLevel.LevelId = levelId;
            riskLevel.LevelName = levelName;
            riskLevel.MinValue = minValue;
            riskLevel.MaxValue = maxValue;
            return riskLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LevelId
        {
            get
            {
                return _LevelId;
            }
            set
            {
                if (_LevelId != value)
                {
                    OnLevelIdChanging(value);
                    ReportPropertyChanging("LevelId");
                    _LevelId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LevelId");
                    OnLevelIdChanged();
                }
            }
        }
        private global::System.Int32 _LevelId;
        partial void OnLevelIdChanging(global::System.Int32 value);
        partial void OnLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LevelName
        {
            get
            {
                return _LevelName;
            }
            set
            {
                OnLevelNameChanging(value);
                ReportPropertyChanging("LevelName");
                _LevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LevelName");
                OnLevelNameChanged();
            }
        }
        private global::System.String _LevelName;
        partial void OnLevelNameChanging(global::System.String value);
        partial void OnLevelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinValue
        {
            get
            {
                return _MinValue;
            }
            set
            {
                OnMinValueChanging(value);
                ReportPropertyChanging("MinValue");
                _MinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinValue");
                OnMinValueChanged();
            }
        }
        private global::System.Int32 _MinValue;
        partial void OnMinValueChanging(global::System.Int32 value);
        partial void OnMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MaxValue
        {
            get
            {
                return _MaxValue;
            }
            set
            {
                OnMaxValueChanging(value);
                ReportPropertyChanging("MaxValue");
                _MaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxValue");
                OnMaxValueChanged();
            }
        }
        private global::System.Int32 _MaxValue;
        partial void OnMaxValueChanging(global::System.Int32 value);
        partial void OnMaxValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Action
        {
            get
            {
                return _Action;
            }
            set
            {
                OnActionChanging(value);
                ReportPropertyChanging("Action");
                _Action = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Action");
                OnActionChanged();
            }
        }
        private global::System.String _Action;
        partial void OnActionChanging(global::System.String value);
        partial void OnActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BackColor
        {
            get
            {
                return _BackColor;
            }
            set
            {
                OnBackColorChanging(value);
                ReportPropertyChanging("BackColor");
                _BackColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BackColor");
                OnBackColorChanged();
            }
        }
        private global::System.String _BackColor;
        partial void OnBackColorChanging(global::System.String value);
        partial void OnBackColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ForeColor
        {
            get
            {
                return _ForeColor;
            }
            set
            {
                OnForeColorChanging(value);
                ReportPropertyChanging("ForeColor");
                _ForeColor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ForeColor");
                OnForeColorChanged();
            }
        }
        private global::System.String _ForeColor;
        partial void OnForeColorChanging(global::System.String value);
        partial void OnForeColorChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskMitigation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskMitigation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskMitigation object.
        /// </summary>
        /// <param name="mitigationId">Initial value of the MitigationId property.</param>
        /// <param name="riskId">Initial value of the RiskId property.</param>
        /// <param name="mitigationCode">Initial value of the MitigationCode property.</param>
        /// <param name="mitigationName">Initial value of the MitigationName property.</param>
        /// <param name="inputDate">Initial value of the InputDate property.</param>
        /// <param name="mitigationDate">Initial value of the MitigationDate property.</param>
        /// <param name="orgPos">Initial value of the OrgPos property.</param>
        /// <param name="isReadOnly">Initial value of the IsReadOnly property.</param>
        public static RiskMitigation CreateRiskMitigation(global::System.Int32 mitigationId, global::System.Int32 riskId, global::System.String mitigationCode, global::System.String mitigationName, global::System.DateTime inputDate, global::System.DateTime mitigationDate, global::System.Int32 orgPos, global::System.Boolean isReadOnly)
        {
            RiskMitigation riskMitigation = new RiskMitigation();
            riskMitigation.MitigationId = mitigationId;
            riskMitigation.RiskId = riskId;
            riskMitigation.MitigationCode = mitigationCode;
            riskMitigation.MitigationName = mitigationName;
            riskMitigation.InputDate = inputDate;
            riskMitigation.MitigationDate = mitigationDate;
            riskMitigation.OrgPos = orgPos;
            riskMitigation.IsReadOnly = isReadOnly;
            return riskMitigation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MitigationId
        {
            get
            {
                return _MitigationId;
            }
            set
            {
                if (_MitigationId != value)
                {
                    OnMitigationIdChanging(value);
                    ReportPropertyChanging("MitigationId");
                    _MitigationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MitigationId");
                    OnMitigationIdChanged();
                }
            }
        }
        private global::System.Int32 _MitigationId;
        partial void OnMitigationIdChanging(global::System.Int32 value);
        partial void OnMitigationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskId
        {
            get
            {
                return _RiskId;
            }
            set
            {
                OnRiskIdChanging(value);
                ReportPropertyChanging("RiskId");
                _RiskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskId");
                OnRiskIdChanged();
            }
        }
        private global::System.Int32 _RiskId;
        partial void OnRiskIdChanging(global::System.Int32 value);
        partial void OnRiskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MitigationCode
        {
            get
            {
                return _MitigationCode;
            }
            set
            {
                OnMitigationCodeChanging(value);
                ReportPropertyChanging("MitigationCode");
                _MitigationCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MitigationCode");
                OnMitigationCodeChanged();
            }
        }
        private global::System.String _MitigationCode;
        partial void OnMitigationCodeChanging(global::System.String value);
        partial void OnMitigationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MitigationName
        {
            get
            {
                return _MitigationName;
            }
            set
            {
                OnMitigationNameChanging(value);
                ReportPropertyChanging("MitigationName");
                _MitigationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MitigationName");
                OnMitigationNameChanged();
            }
        }
        private global::System.String _MitigationName;
        partial void OnMitigationNameChanging(global::System.String value);
        partial void OnMitigationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InputDate
        {
            get
            {
                return _InputDate;
            }
            set
            {
                OnInputDateChanging(value);
                ReportPropertyChanging("InputDate");
                _InputDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InputDate");
                OnInputDateChanged();
            }
        }
        private global::System.DateTime _InputDate;
        partial void OnInputDateChanging(global::System.DateTime value);
        partial void OnInputDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MitigationDate
        {
            get
            {
                return _MitigationDate;
            }
            set
            {
                OnMitigationDateChanging(value);
                ReportPropertyChanging("MitigationDate");
                _MitigationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MitigationDate");
                OnMitigationDateChanged();
            }
        }
        private global::System.DateTime _MitigationDate;
        partial void OnMitigationDateChanging(global::System.DateTime value);
        partial void OnMitigationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Cost
        {
            get
            {
                return _Cost;
            }
            set
            {
                OnCostChanging(value);
                ReportPropertyChanging("Cost");
                _Cost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Cost");
                OnCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _Cost;
        partial void OnCostChanging(Nullable<global::System.Decimal> value);
        partial void OnCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MitigationCatId
        {
            get
            {
                return _MitigationCatId;
            }
            set
            {
                OnMitigationCatIdChanging(value);
                ReportPropertyChanging("MitigationCatId");
                _MitigationCatId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MitigationCatId");
                OnMitigationCatIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MitigationCatId;
        partial void OnMitigationCatIdChanging(Nullable<global::System.Int32> value);
        partial void OnMitigationCatIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MitigationTypeId
        {
            get
            {
                return _MitigationTypeId;
            }
            set
            {
                OnMitigationTypeIdChanging(value);
                ReportPropertyChanging("MitigationTypeId");
                _MitigationTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MitigationTypeId");
                OnMitigationTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MitigationTypeId;
        partial void OnMitigationTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnMitigationTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProbLevelId
        {
            get
            {
                return _ProbLevelId;
            }
            set
            {
                OnProbLevelIdChanging(value);
                ReportPropertyChanging("ProbLevelId");
                _ProbLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProbLevelId");
                OnProbLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProbLevelId;
        partial void OnProbLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnProbLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ImpactLevelId
        {
            get
            {
                return _ImpactLevelId;
            }
            set
            {
                OnImpactLevelIdChanging(value);
                ReportPropertyChanging("ImpactLevelId");
                _ImpactLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactLevelId");
                OnImpactLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ImpactLevelId;
        partial void OnImpactLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnImpactLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RiskLevel
        {
            get
            {
                return _RiskLevel;
            }
            set
            {
                OnRiskLevelChanging(value);
                ReportPropertyChanging("RiskLevel");
                _RiskLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskLevel");
                OnRiskLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _RiskLevel;
        partial void OnRiskLevelChanging(Nullable<global::System.Int32> value);
        partial void OnRiskLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LimitDate
        {
            get
            {
                return _LimitDate;
            }
            set
            {
                OnLimitDateChanging(value);
                ReportPropertyChanging("LimitDate");
                _LimitDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitDate");
                OnLimitDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LimitDate;
        partial void OnLimitDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLimitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovalDate
        {
            get
            {
                return _ApprovalDate;
            }
            set
            {
                OnApprovalDateChanging(value);
                ReportPropertyChanging("ApprovalDate");
                _ApprovalDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovalDate");
                OnApprovalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovalDate;
        partial void OnApprovalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Guid> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Guid> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrgPos
        {
            get
            {
                return _OrgPos;
            }
            set
            {
                OnOrgPosChanging(value);
                ReportPropertyChanging("OrgPos");
                _OrgPos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgPos");
                OnOrgPosChanged();
            }
        }
        private global::System.Int32 _OrgPos;
        partial void OnOrgPosChanging(global::System.Int32 value);
        partial void OnOrgPosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeptId
        {
            get
            {
                return _DeptId;
            }
            set
            {
                OnDeptIdChanging(value);
                ReportPropertyChanging("DeptId");
                _DeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptId");
                OnDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeptId;
        partial void OnDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDeptId
        {
            get
            {
                return _SubDeptId;
            }
            set
            {
                OnSubDeptIdChanging(value);
                ReportPropertyChanging("SubDeptId");
                _SubDeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDeptId");
                OnSubDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDeptId;
        partial void OnSubDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DivisionId;
        partial void OnDivisionIdChanging(Nullable<global::System.Int32> value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDivId
        {
            get
            {
                return _SubDivId;
            }
            set
            {
                OnSubDivIdChanging(value);
                ReportPropertyChanging("SubDivId");
                _SubDivId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDivId");
                OnSubDivIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDivId;
        partial void OnSubDivIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDivIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BranchId
        {
            get
            {
                return _BranchId;
            }
            set
            {
                OnBranchIdChanging(value);
                ReportPropertyChanging("BranchId");
                _BranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchId");
                OnBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BranchId;
        partial void OnBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubBranchId
        {
            get
            {
                return _SubBranchId;
            }
            set
            {
                OnSubBranchIdChanging(value);
                ReportPropertyChanging("SubBranchId");
                _SubBranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBranchId");
                OnSubBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubBranchId;
        partial void OnSubBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BizUnitId
        {
            get
            {
                return _BizUnitId;
            }
            set
            {
                OnBizUnitIdChanging(value);
                ReportPropertyChanging("BizUnitId");
                _BizUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BizUnitId");
                OnBizUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BizUnitId;
        partial void OnBizUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnBizUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsReadOnly
        {
            get
            {
                return _IsReadOnly;
            }
            set
            {
                OnIsReadOnlyChanging(value);
                ReportPropertyChanging("IsReadOnly");
                _IsReadOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReadOnly");
                OnIsReadOnlyChanged();
            }
        }
        private global::System.Boolean _IsReadOnly;
        partial void OnIsReadOnlyChanging(global::System.Boolean value);
        partial void OnIsReadOnlyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_ImpactLevels", "ImpactLevel")]
        public ImpactLevel ImpactLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskMitigations_ImpactLevels", "ImpactLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskMitigations_ImpactLevels", "ImpactLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactLevel> ImpactLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskMitigations_ImpactLevels", "ImpactLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskMitigations_ImpactLevels", "ImpactLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_MitigationApprovals_RiskMitigations", "MitigationApproval")]
        public EntityCollection<MitigationApproval> MitigationApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MitigationApproval>("AskrindoMVCModel.FK_MitigationApprovals_RiskMitigations", "MitigationApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MitigationApproval>("AskrindoMVCModel.FK_MitigationApprovals_RiskMitigations", "MitigationApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_MitigationAttachments_RiskMitigations", "MitigationAttachment")]
        public EntityCollection<MitigationAttachment> MitigationAttachments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MitigationAttachment>("AskrindoMVCModel.FK_MitigationAttachments_RiskMitigations", "MitigationAttachment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MitigationAttachment>("AskrindoMVCModel.FK_MitigationAttachments_RiskMitigations", "MitigationAttachment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_MitigationCats", "MitigationCat")]
        public MitigationCat MitigationCat
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MitigationCat>("AskrindoMVCModel.FK_RiskMitigations_MitigationCats", "MitigationCat").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MitigationCat>("AskrindoMVCModel.FK_RiskMitigations_MitigationCats", "MitigationCat").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MitigationCat> MitigationCatReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MitigationCat>("AskrindoMVCModel.FK_RiskMitigations_MitigationCats", "MitigationCat");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MitigationCat>("AskrindoMVCModel.FK_RiskMitigations_MitigationCats", "MitigationCat", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_MitigationTypes", "MitigationType")]
        public MitigationType MitigationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MitigationType>("AskrindoMVCModel.FK_RiskMitigations_MitigationTypes", "MitigationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MitigationType>("AskrindoMVCModel.FK_RiskMitigations_MitigationTypes", "MitigationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MitigationType> MitigationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MitigationType>("AskrindoMVCModel.FK_RiskMitigations_MitigationTypes", "MitigationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MitigationType>("AskrindoMVCModel.FK_RiskMitigations_MitigationTypes", "MitigationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_ProbLevels", "ProbLevel")]
        public ProbLevel ProbLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskMitigations_ProbLevels", "ProbLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskMitigations_ProbLevels", "ProbLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProbLevel> ProbLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskMitigations_ProbLevels", "ProbLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskMitigations_ProbLevels", "ProbLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_Risks", "Risk")]
        public Risk Risk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskMitigations_Risks", "Risk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskMitigations_Risks", "Risk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Risk> RiskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskMitigations_Risks", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Risk>("AskrindoMVCModel.FK_RiskMitigations_Risks", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_UserInfos", "UserInfo")]
        public UserInfo UserInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_RiskMitigations_UserInfos", "UserInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_RiskMitigations_UserInfos", "UserInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserInfo> UserInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserInfo>("AskrindoMVCModel.FK_RiskMitigations_UserInfos", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserInfo>("AskrindoMVCModel.FK_RiskMitigations_UserInfos", "UserInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskStates_RiskMitigations", "RiskState")]
        public EntityCollection<RiskState> RiskStates
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskState>("AskrindoMVCModel.FK_RiskStates_RiskMitigations", "RiskState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskState>("AskrindoMVCModel.FK_RiskStates_RiskMitigations", "RiskState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Mitigationunit1", "MitigationUnit")]
        public EntityCollection<MitigationUnit> MitigationUnits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MitigationUnit>("AskrindoMVCModel.FK_Mitigationunit1", "MitigationUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MitigationUnit>("AskrindoMVCModel.FK_Mitigationunit1", "MitigationUnit", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskNonMoneyImpact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskNonMoneyImpact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskNonMoneyImpact object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="riskId">Initial value of the RiskId property.</param>
        /// <param name="impactDetailId">Initial value of the ImpactDetailId property.</param>
        /// <param name="impactTypeId">Initial value of the ImpactTypeId property.</param>
        /// <param name="impactLevelId">Initial value of the ImpactLevelId property.</param>
        public static RiskNonMoneyImpact CreateRiskNonMoneyImpact(global::System.Int32 id, global::System.Int32 riskId, global::System.Int32 impactDetailId, global::System.Int32 impactTypeId, global::System.Int32 impactLevelId)
        {
            RiskNonMoneyImpact riskNonMoneyImpact = new RiskNonMoneyImpact();
            riskNonMoneyImpact.Id = id;
            riskNonMoneyImpact.RiskId = riskId;
            riskNonMoneyImpact.ImpactDetailId = impactDetailId;
            riskNonMoneyImpact.ImpactTypeId = impactTypeId;
            riskNonMoneyImpact.ImpactLevelId = impactLevelId;
            return riskNonMoneyImpact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskId
        {
            get
            {
                return _RiskId;
            }
            set
            {
                OnRiskIdChanging(value);
                ReportPropertyChanging("RiskId");
                _RiskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskId");
                OnRiskIdChanged();
            }
        }
        private global::System.Int32 _RiskId;
        partial void OnRiskIdChanging(global::System.Int32 value);
        partial void OnRiskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactDetailId
        {
            get
            {
                return _ImpactDetailId;
            }
            set
            {
                OnImpactDetailIdChanging(value);
                ReportPropertyChanging("ImpactDetailId");
                _ImpactDetailId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactDetailId");
                OnImpactDetailIdChanged();
            }
        }
        private global::System.Int32 _ImpactDetailId;
        partial void OnImpactDetailIdChanging(global::System.Int32 value);
        partial void OnImpactDetailIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactTypeId
        {
            get
            {
                return _ImpactTypeId;
            }
            set
            {
                OnImpactTypeIdChanging(value);
                ReportPropertyChanging("ImpactTypeId");
                _ImpactTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactTypeId");
                OnImpactTypeIdChanged();
            }
        }
        private global::System.Int32 _ImpactTypeId;
        partial void OnImpactTypeIdChanging(global::System.Int32 value);
        partial void OnImpactTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactLevelId
        {
            get
            {
                return _ImpactLevelId;
            }
            set
            {
                OnImpactLevelIdChanging(value);
                ReportPropertyChanging("ImpactLevelId");
                _ImpactLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactLevelId");
                OnImpactLevelIdChanged();
            }
        }
        private global::System.Int32 _ImpactLevelId;
        partial void OnImpactLevelIdChanging(global::System.Int32 value);
        partial void OnImpactLevelIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_ImpactDetails", "ImpactDetail")]
        public ImpactDetail ImpactDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactDetail>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactDetails", "ImpactDetail").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactDetail>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactDetails", "ImpactDetail").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactDetail> ImpactDetailReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactDetail>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactDetails", "ImpactDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactDetail>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactDetails", "ImpactDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_ImpactLevels", "ImpactLevel")]
        public ImpactLevel ImpactLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactLevels", "ImpactLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactLevels", "ImpactLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactLevel> ImpactLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactLevels", "ImpactLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactLevels", "ImpactLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_ImpactTypes", "ImpactType")]
        public ImpactType ImpactType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactType>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactTypes", "ImpactType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactType>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactTypes", "ImpactType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactType> ImpactTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactType>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactTypes", "ImpactType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactType>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_ImpactTypes", "ImpactType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskNonMoneyImpacts_Risks", "Risk")]
        public Risk Risk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_Risks", "Risk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_Risks", "Risk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Risk> RiskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_Risks", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Risk>("AskrindoMVCModel.FK_RiskNonMoneyImpacts_Risks", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskProb")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskProb : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskProb object.
        /// </summary>
        /// <param name="riskId">Initial value of the RiskId property.</param>
        /// <param name="probOption">Initial value of the ProbOption property.</param>
        public static RiskProb CreateRiskProb(global::System.Int32 riskId, global::System.Int32 probOption)
        {
            RiskProb riskProb = new RiskProb();
            riskProb.RiskId = riskId;
            riskProb.ProbOption = probOption;
            return riskProb;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskId
        {
            get
            {
                return _RiskId;
            }
            set
            {
                if (_RiskId != value)
                {
                    OnRiskIdChanging(value);
                    ReportPropertyChanging("RiskId");
                    _RiskId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RiskId");
                    OnRiskIdChanged();
                }
            }
        }
        private global::System.Int32 _RiskId;
        partial void OnRiskIdChanging(global::System.Int32 value);
        partial void OnRiskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProbOption
        {
            get
            {
                return _ProbOption;
            }
            set
            {
                OnProbOptionChanging(value);
                ReportPropertyChanging("ProbOption");
                _ProbOption = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProbOption");
                OnProbOptionChanged();
            }
        }
        private global::System.Int32 _ProbOption;
        partial void OnProbOptionChanging(global::System.Int32 value);
        partial void OnProbOptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Poisson1
        {
            get
            {
                return _Poisson1;
            }
            set
            {
                OnPoisson1Changing(value);
                ReportPropertyChanging("Poisson1");
                _Poisson1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Poisson1");
                OnPoisson1Changed();
            }
        }
        private Nullable<global::System.Int32> _Poisson1;
        partial void OnPoisson1Changing(Nullable<global::System.Int32> value);
        partial void OnPoisson1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Poisson2
        {
            get
            {
                return _Poisson2;
            }
            set
            {
                OnPoisson2Changing(value);
                ReportPropertyChanging("Poisson2");
                _Poisson2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Poisson2");
                OnPoisson2Changed();
            }
        }
        private Nullable<global::System.Int32> _Poisson2;
        partial void OnPoisson2Changing(Nullable<global::System.Int32> value);
        partial void OnPoisson2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Binom1
        {
            get
            {
                return _Binom1;
            }
            set
            {
                OnBinom1Changing(value);
                ReportPropertyChanging("Binom1");
                _Binom1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Binom1");
                OnBinom1Changed();
            }
        }
        private Nullable<global::System.Int32> _Binom1;
        partial void OnBinom1Changing(Nullable<global::System.Int32> value);
        partial void OnBinom1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Binom2
        {
            get
            {
                return _Binom2;
            }
            set
            {
                OnBinom2Changing(value);
                ReportPropertyChanging("Binom2");
                _Binom2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Binom2");
                OnBinom2Changed();
            }
        }
        private Nullable<global::System.Int32> _Binom2;
        partial void OnBinom2Changing(Nullable<global::System.Int32> value);
        partial void OnBinom2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Approx1
        {
            get
            {
                return _Approx1;
            }
            set
            {
                OnApprox1Changing(value);
                ReportPropertyChanging("Approx1");
                _Approx1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approx1");
                OnApprox1Changed();
            }
        }
        private Nullable<global::System.Decimal> _Approx1;
        partial void OnApprox1Changing(Nullable<global::System.Decimal> value);
        partial void OnApprox1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Approx2
        {
            get
            {
                return _Approx2;
            }
            set
            {
                OnApprox2Changing(value);
                ReportPropertyChanging("Approx2");
                _Approx2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approx2");
                OnApprox2Changed();
            }
        }
        private Nullable<global::System.Decimal> _Approx2;
        partial void OnApprox2Changing(Nullable<global::System.Decimal> value);
        partial void OnApprox2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Approx3
        {
            get
            {
                return _Approx3;
            }
            set
            {
                OnApprox3Changing(value);
                ReportPropertyChanging("Approx3");
                _Approx3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approx3");
                OnApprox3Changed();
            }
        }
        private Nullable<global::System.Decimal> _Approx3;
        partial void OnApprox3Changing(Nullable<global::System.Decimal> value);
        partial void OnApprox3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Compare
        {
            get
            {
                return _Compare;
            }
            set
            {
                OnCompareChanging(value);
                ReportPropertyChanging("Compare");
                _Compare = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Compare");
                OnCompareChanged();
            }
        }
        private Nullable<global::System.Decimal> _Compare;
        partial void OnCompareChanging(Nullable<global::System.Decimal> value);
        partial void OnCompareChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FreqId
        {
            get
            {
                return _FreqId;
            }
            set
            {
                OnFreqIdChanging(value);
                ReportPropertyChanging("FreqId");
                _FreqId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FreqId");
                OnFreqIdChanged();
            }
        }
        private Nullable<global::System.Int32> _FreqId;
        partial void OnFreqIdChanging(Nullable<global::System.Int32> value);
        partial void OnFreqIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ProbValue
        {
            get
            {
                return _ProbValue;
            }
            set
            {
                OnProbValueChanging(value);
                ReportPropertyChanging("ProbValue");
                _ProbValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProbValue");
                OnProbValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _ProbValue;
        partial void OnProbValueChanging(Nullable<global::System.Decimal> value);
        partial void OnProbValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProbLevelId
        {
            get
            {
                return _ProbLevelId;
            }
            set
            {
                OnProbLevelIdChanging(value);
                ReportPropertyChanging("ProbLevelId");
                _ProbLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProbLevelId");
                OnProbLevelIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProbLevelId;
        partial void OnProbLevelIdChanging(Nullable<global::System.Int32> value);
        partial void OnProbLevelIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskProbs_Freqs", "Freq")]
        public Freq Freq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Freq>("AskrindoMVCModel.FK_RiskProbs_Freqs", "Freq").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Freq>("AskrindoMVCModel.FK_RiskProbs_Freqs", "Freq").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Freq> FreqReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Freq>("AskrindoMVCModel.FK_RiskProbs_Freqs", "Freq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Freq>("AskrindoMVCModel.FK_RiskProbs_Freqs", "Freq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskProbs_ProbLevels", "ProbLevel")]
        public ProbLevel ProbLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskProbs_ProbLevels", "ProbLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskProbs_ProbLevels", "ProbLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProbLevel> ProbLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskProbs_ProbLevels", "ProbLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskProbs_ProbLevels", "ProbLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskProbs_Risks", "Risk")]
        public Risk Risk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskProbs_Risks", "Risk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskProbs_Risks", "Risk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Risk> RiskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskProbs_Risks", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Risk>("AskrindoMVCModel.FK_RiskProbs_Risks", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskState object.
        /// </summary>
        /// <param name="stateId">Initial value of the StateId property.</param>
        /// <param name="riskId">Initial value of the RiskId property.</param>
        /// <param name="stateDate">Initial value of the StateDate property.</param>
        /// <param name="probLevelId">Initial value of the ProbLevelId property.</param>
        /// <param name="impactLevelId">Initial value of the ImpactLevelId property.</param>
        /// <param name="riskLevel">Initial value of the RiskLevel property.</param>
        public static RiskState CreateRiskState(global::System.Int32 stateId, global::System.Int32 riskId, global::System.DateTime stateDate, global::System.Int32 probLevelId, global::System.Int32 impactLevelId, global::System.Int32 riskLevel)
        {
            RiskState riskState = new RiskState();
            riskState.StateId = stateId;
            riskState.RiskId = riskId;
            riskState.StateDate = stateDate;
            riskState.ProbLevelId = probLevelId;
            riskState.ImpactLevelId = impactLevelId;
            riskState.RiskLevel = riskLevel;
            return riskState;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                if (_StateId != value)
                {
                    OnStateIdChanging(value);
                    ReportPropertyChanging("StateId");
                    _StateId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateId");
                    OnStateIdChanged();
                }
            }
        }
        private global::System.Int32 _StateId;
        partial void OnStateIdChanging(global::System.Int32 value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskId
        {
            get
            {
                return _RiskId;
            }
            set
            {
                OnRiskIdChanging(value);
                ReportPropertyChanging("RiskId");
                _RiskId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskId");
                OnRiskIdChanged();
            }
        }
        private global::System.Int32 _RiskId;
        partial void OnRiskIdChanging(global::System.Int32 value);
        partial void OnRiskIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MitigationId
        {
            get
            {
                return _MitigationId;
            }
            set
            {
                OnMitigationIdChanging(value);
                ReportPropertyChanging("MitigationId");
                _MitigationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MitigationId");
                OnMitigationIdChanged();
            }
        }
        private Nullable<global::System.Int32> _MitigationId;
        partial void OnMitigationIdChanging(Nullable<global::System.Int32> value);
        partial void OnMitigationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StateDate
        {
            get
            {
                return _StateDate;
            }
            set
            {
                OnStateDateChanging(value);
                ReportPropertyChanging("StateDate");
                _StateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StateDate");
                OnStateDateChanged();
            }
        }
        private global::System.DateTime _StateDate;
        partial void OnStateDateChanging(global::System.DateTime value);
        partial void OnStateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProbLevelId
        {
            get
            {
                return _ProbLevelId;
            }
            set
            {
                OnProbLevelIdChanging(value);
                ReportPropertyChanging("ProbLevelId");
                _ProbLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProbLevelId");
                OnProbLevelIdChanged();
            }
        }
        private global::System.Int32 _ProbLevelId;
        partial void OnProbLevelIdChanging(global::System.Int32 value);
        partial void OnProbLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImpactLevelId
        {
            get
            {
                return _ImpactLevelId;
            }
            set
            {
                OnImpactLevelIdChanging(value);
                ReportPropertyChanging("ImpactLevelId");
                _ImpactLevelId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImpactLevelId");
                OnImpactLevelIdChanged();
            }
        }
        private global::System.Int32 _ImpactLevelId;
        partial void OnImpactLevelIdChanging(global::System.Int32 value);
        partial void OnImpactLevelIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskLevel
        {
            get
            {
                return _RiskLevel;
            }
            set
            {
                OnRiskLevelChanging(value);
                ReportPropertyChanging("RiskLevel");
                _RiskLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskLevel");
                OnRiskLevelChanged();
            }
        }
        private global::System.Int32 _RiskLevel;
        partial void OnRiskLevelChanging(global::System.Int32 value);
        partial void OnRiskLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskStates_ImpactLevels", "ImpactLevel")]
        public ImpactLevel ImpactLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskStates_ImpactLevels", "ImpactLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskStates_ImpactLevels", "ImpactLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ImpactLevel> ImpactLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskStates_ImpactLevels", "ImpactLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ImpactLevel>("AskrindoMVCModel.FK_RiskStates_ImpactLevels", "ImpactLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskStates_ProbLevels", "ProbLevel")]
        public ProbLevel ProbLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskStates_ProbLevels", "ProbLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskStates_ProbLevels", "ProbLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProbLevel> ProbLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskStates_ProbLevels", "ProbLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProbLevel>("AskrindoMVCModel.FK_RiskStates_ProbLevels", "ProbLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskStates_Risks", "Risk")]
        public Risk Risk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskStates_Risks", "Risk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskStates_Risks", "Risk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Risk> RiskReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Risk>("AskrindoMVCModel.FK_RiskStates_Risks", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Risk>("AskrindoMVCModel.FK_RiskStates_Risks", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskStates_RiskMitigations", "RiskMitigation")]
        public RiskMitigation RiskMitigation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_RiskStates_RiskMitigations", "RiskMitigation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_RiskStates_RiskMitigations", "RiskMitigation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskMitigation> RiskMitigationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_RiskStates_RiskMitigations", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskMitigation>("AskrindoMVCModel.FK_RiskStates_RiskMitigations", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="RiskType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RiskType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RiskType object.
        /// </summary>
        /// <param name="riskTypeId">Initial value of the RiskTypeId property.</param>
        /// <param name="riskGroupId">Initial value of the RiskGroupId property.</param>
        /// <param name="riskTypeName">Initial value of the RiskTypeName property.</param>
        public static RiskType CreateRiskType(global::System.Int32 riskTypeId, global::System.Int32 riskGroupId, global::System.String riskTypeName)
        {
            RiskType riskType = new RiskType();
            riskType.RiskTypeId = riskTypeId;
            riskType.RiskGroupId = riskGroupId;
            riskType.RiskTypeName = riskTypeName;
            return riskType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskTypeId
        {
            get
            {
                return _RiskTypeId;
            }
            set
            {
                if (_RiskTypeId != value)
                {
                    OnRiskTypeIdChanging(value);
                    ReportPropertyChanging("RiskTypeId");
                    _RiskTypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RiskTypeId");
                    OnRiskTypeIdChanged();
                }
            }
        }
        private global::System.Int32 _RiskTypeId;
        partial void OnRiskTypeIdChanging(global::System.Int32 value);
        partial void OnRiskTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RiskGroupId
        {
            get
            {
                return _RiskGroupId;
            }
            set
            {
                OnRiskGroupIdChanging(value);
                ReportPropertyChanging("RiskGroupId");
                _RiskGroupId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RiskGroupId");
                OnRiskGroupIdChanged();
            }
        }
        private global::System.Int32 _RiskGroupId;
        partial void OnRiskGroupIdChanging(global::System.Int32 value);
        partial void OnRiskGroupIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RiskTypeName
        {
            get
            {
                return _RiskTypeName;
            }
            set
            {
                OnRiskTypeNameChanging(value);
                ReportPropertyChanging("RiskTypeName");
                _RiskTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RiskTypeName");
                OnRiskTypeNameChanged();
            }
        }
        private global::System.String _RiskTypeName;
        partial void OnRiskTypeNameChanging(global::System.String value);
        partial void OnRiskTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskTypes_RiskGroups", "RiskGroups")]
        public RiskGroup RiskGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskGroup>("AskrindoMVCModel.FK_RiskTypes_RiskGroups", "RiskGroups").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskGroup>("AskrindoMVCModel.FK_RiskTypes_RiskGroups", "RiskGroups").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RiskGroup> RiskGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RiskGroup>("AskrindoMVCModel.FK_RiskTypes_RiskGroups", "RiskGroups");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RiskGroup>("AskrindoMVCModel.FK_RiskTypes_RiskGroups", "RiskGroups", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_RiskTypes", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_RiskTypes", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_RiskTypes", "Risk", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="SerialNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SerialNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SerialNumber object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        /// <param name="sN">Initial value of the SN property.</param>
        public static SerialNumber CreateSerialNumber(global::System.Int32 id, global::System.Int32 year, global::System.Int32 sN)
        {
            SerialNumber serialNumber = new SerialNumber();
            serialNumber.Id = id;
            serialNumber.Year = year;
            serialNumber.SN = sN;
            return serialNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SN
        {
            get
            {
                return _SN;
            }
            set
            {
                OnSNChanging(value);
                ReportPropertyChanging("SN");
                _SN = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SN");
                OnSNChanged();
            }
        }
        private global::System.Int32 _SN;
        partial void OnSNChanging(global::System.Int32 value);
        partial void OnSNChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="SubBranch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubBranch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubBranch object.
        /// </summary>
        /// <param name="subBranchId">Initial value of the SubBranchId property.</param>
        /// <param name="branchId">Initial value of the BranchId property.</param>
        /// <param name="subBranchName">Initial value of the SubBranchName property.</param>
        /// <param name="isSupporting">Initial value of the IsSupporting property.</param>
        public static SubBranch CreateSubBranch(global::System.Int32 subBranchId, global::System.Int32 branchId, global::System.String subBranchName, global::System.Boolean isSupporting)
        {
            SubBranch subBranch = new SubBranch();
            subBranch.SubBranchId = subBranchId;
            subBranch.BranchId = branchId;
            subBranch.SubBranchName = subBranchName;
            subBranch.IsSupporting = isSupporting;
            return subBranch;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubBranchId
        {
            get
            {
                return _SubBranchId;
            }
            set
            {
                if (_SubBranchId != value)
                {
                    OnSubBranchIdChanging(value);
                    ReportPropertyChanging("SubBranchId");
                    _SubBranchId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubBranchId");
                    OnSubBranchIdChanged();
                }
            }
        }
        private global::System.Int32 _SubBranchId;
        partial void OnSubBranchIdChanging(global::System.Int32 value);
        partial void OnSubBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 BranchId
        {
            get
            {
                return _BranchId;
            }
            set
            {
                OnBranchIdChanging(value);
                ReportPropertyChanging("BranchId");
                _BranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchId");
                OnBranchIdChanged();
            }
        }
        private global::System.Int32 _BranchId;
        partial void OnBranchIdChanging(global::System.Int32 value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubBranchName
        {
            get
            {
                return _SubBranchName;
            }
            set
            {
                OnSubBranchNameChanging(value);
                ReportPropertyChanging("SubBranchName");
                _SubBranchName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubBranchName");
                OnSubBranchNameChanged();
            }
        }
        private global::System.String _SubBranchName;
        partial void OnSubBranchNameChanging(global::System.String value);
        partial void OnSubBranchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSupporting
        {
            get
            {
                return _IsSupporting;
            }
            set
            {
                OnIsSupportingChanging(value);
                ReportPropertyChanging("IsSupporting");
                _IsSupporting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSupporting");
                OnIsSupportingChanged();
            }
        }
        private global::System.Boolean _IsSupporting;
        partial void OnIsSupportingChanging(global::System.Boolean value);
        partial void OnIsSupportingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_SubBranches_Branches", "Branch")]
        public Branch Branch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_SubBranches_Branches", "Branch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_SubBranches_Branches", "Branch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> BranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_SubBranches_Branches", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("AskrindoMVCModel.FK_SubBranches_Branches", "Branch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_SubBranches", "RiskApproval")]
        public EntityCollection<RiskApproval> RiskApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_SubBranches", "RiskApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_SubBranches", "RiskApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_SubBranches", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_SubBranches", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_SubBranches", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_SubBranches", "UserInfo")]
        public EntityCollection<UserInfo> UserInfos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_SubBranches", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_SubBranches", "UserInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="SubDept")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubDept : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubDept object.
        /// </summary>
        /// <param name="subDeptId">Initial value of the SubDeptId property.</param>
        /// <param name="deptId">Initial value of the DeptId property.</param>
        /// <param name="subDeptName">Initial value of the SubDeptName property.</param>
        /// <param name="isSupporting">Initial value of the IsSupporting property.</param>
        public static SubDept CreateSubDept(global::System.Int32 subDeptId, global::System.Int32 deptId, global::System.String subDeptName, global::System.Boolean isSupporting)
        {
            SubDept subDept = new SubDept();
            subDept.SubDeptId = subDeptId;
            subDept.DeptId = deptId;
            subDept.SubDeptName = subDeptName;
            subDept.IsSupporting = isSupporting;
            return subDept;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubDeptId
        {
            get
            {
                return _SubDeptId;
            }
            set
            {
                if (_SubDeptId != value)
                {
                    OnSubDeptIdChanging(value);
                    ReportPropertyChanging("SubDeptId");
                    _SubDeptId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubDeptId");
                    OnSubDeptIdChanged();
                }
            }
        }
        private global::System.Int32 _SubDeptId;
        partial void OnSubDeptIdChanging(global::System.Int32 value);
        partial void OnSubDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeptId
        {
            get
            {
                return _DeptId;
            }
            set
            {
                OnDeptIdChanging(value);
                ReportPropertyChanging("DeptId");
                _DeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptId");
                OnDeptIdChanged();
            }
        }
        private global::System.Int32 _DeptId;
        partial void OnDeptIdChanging(global::System.Int32 value);
        partial void OnDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubDeptName
        {
            get
            {
                return _SubDeptName;
            }
            set
            {
                OnSubDeptNameChanging(value);
                ReportPropertyChanging("SubDeptName");
                _SubDeptName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubDeptName");
                OnSubDeptNameChanged();
            }
        }
        private global::System.String _SubDeptName;
        partial void OnSubDeptNameChanging(global::System.String value);
        partial void OnSubDeptNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSupporting
        {
            get
            {
                return _IsSupporting;
            }
            set
            {
                OnIsSupportingChanging(value);
                ReportPropertyChanging("IsSupporting");
                _IsSupporting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSupporting");
                OnIsSupportingChanged();
            }
        }
        private global::System.Boolean _IsSupporting;
        partial void OnIsSupportingChanging(global::System.Boolean value);
        partial void OnIsSupportingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_SubDepts_Depts", "Dept")]
        public Dept Dept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_SubDepts_Depts", "Dept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_SubDepts_Depts", "Dept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dept> DeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_SubDepts_Depts", "Dept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dept>("AskrindoMVCModel.FK_SubDepts_Depts", "Dept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_SubDepts", "RiskApproval")]
        public EntityCollection<RiskApproval> RiskApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_SubDepts", "RiskApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_SubDepts", "RiskApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_SubDepts", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_SubDepts", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_SubDepts", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_SubDepts", "UserInfo")]
        public EntityCollection<UserInfo> UserInfos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_SubDepts", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_SubDepts", "UserInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="SubDiv")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubDiv : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubDiv object.
        /// </summary>
        /// <param name="subDivId">Initial value of the SubDivId property.</param>
        /// <param name="divisionId">Initial value of the DivisionId property.</param>
        /// <param name="subDivName">Initial value of the SubDivName property.</param>
        /// <param name="isSupporting">Initial value of the IsSupporting property.</param>
        public static SubDiv CreateSubDiv(global::System.Int32 subDivId, global::System.Int32 divisionId, global::System.String subDivName, global::System.Boolean isSupporting)
        {
            SubDiv subDiv = new SubDiv();
            subDiv.SubDivId = subDivId;
            subDiv.DivisionId = divisionId;
            subDiv.SubDivName = subDivName;
            subDiv.IsSupporting = isSupporting;
            return subDiv;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SubDivId
        {
            get
            {
                return _SubDivId;
            }
            set
            {
                if (_SubDivId != value)
                {
                    OnSubDivIdChanging(value);
                    ReportPropertyChanging("SubDivId");
                    _SubDivId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SubDivId");
                    OnSubDivIdChanged();
                }
            }
        }
        private global::System.Int32 _SubDivId;
        partial void OnSubDivIdChanging(global::System.Int32 value);
        partial void OnSubDivIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private global::System.Int32 _DivisionId;
        partial void OnDivisionIdChanging(global::System.Int32 value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SubDivName
        {
            get
            {
                return _SubDivName;
            }
            set
            {
                OnSubDivNameChanging(value);
                ReportPropertyChanging("SubDivName");
                _SubDivName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SubDivName");
                OnSubDivNameChanged();
            }
        }
        private global::System.String _SubDivName;
        partial void OnSubDivNameChanging(global::System.String value);
        partial void OnSubDivNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSupporting
        {
            get
            {
                return _IsSupporting;
            }
            set
            {
                OnIsSupportingChanging(value);
                ReportPropertyChanging("IsSupporting");
                _IsSupporting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSupporting");
                OnIsSupportingChanged();
            }
        }
        private global::System.Boolean _IsSupporting;
        partial void OnIsSupportingChanging(global::System.Boolean value);
        partial void OnIsSupportingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_SubDivs_Divisions", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_SubDivs_Divisions", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_SubDivs_Divisions", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_SubDivs_Divisions", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("AskrindoMVCModel.FK_SubDivs_Divisions", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_SubDivs", "RiskApproval")]
        public EntityCollection<RiskApproval> RiskApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_SubDivs", "RiskApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_SubDivs", "RiskApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_SubDivs", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_SubDivs", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_SubDivs", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_SubDivs", "UserInfo")]
        public EntityCollection<UserInfo> UserInfos
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_SubDivs", "UserInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserInfo>("AskrindoMVCModel.FK_UserInfos_SubDivs", "UserInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="UserGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserGroup object.
        /// </summary>
        /// <param name="userGroupID">Initial value of the UserGroupID property.</param>
        public static UserGroup CreateUserGroup(global::System.Int16 userGroupID)
        {
            UserGroup userGroup = new UserGroup();
            userGroup.UserGroupID = userGroupID;
            return userGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 UserGroupID
        {
            get
            {
                return _UserGroupID;
            }
            set
            {
                if (_UserGroupID != value)
                {
                    OnUserGroupIDChanging(value);
                    ReportPropertyChanging("UserGroupID");
                    _UserGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGroupID");
                    OnUserGroupIDChanged();
                }
            }
        }
        private global::System.Int16 _UserGroupID;
        partial void OnUserGroupIDChanging(global::System.Int16 value);
        partial void OnUserGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserGroup1
        {
            get
            {
                return _UserGroup1;
            }
            set
            {
                OnUserGroup1Changing(value);
                ReportPropertyChanging("UserGroup1");
                _UserGroup1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserGroup1");
                OnUserGroup1Changed();
            }
        }
        private global::System.String _UserGroup1;
        partial void OnUserGroup1Changing(global::System.String value);
        partial void OnUserGroup1Changed();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AskrindoMVCModel", Name="UserInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserInfo object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        /// <param name="isRiskOwner">Initial value of the IsRiskOwner property.</param>
        /// <param name="orgPos">Initial value of the OrgPos property.</param>
        public static UserInfo CreateUserInfo(global::System.Guid userId, global::System.String fullName, global::System.Boolean isRiskOwner, global::System.Int32 orgPos)
        {
            UserInfo userInfo = new UserInfo();
            userInfo.UserId = userId;
            userInfo.FullName = fullName;
            userInfo.IsRiskOwner = isRiskOwner;
            userInfo.OrgPos = orgPos;
            return userInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTitle
        {
            get
            {
                return _JobTitle;
            }
            set
            {
                OnJobTitleChanging(value);
                ReportPropertyChanging("JobTitle");
                _JobTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTitle");
                OnJobTitleChanged();
            }
        }
        private global::System.String _JobTitle;
        partial void OnJobTitleChanging(global::System.String value);
        partial void OnJobTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRiskOwner
        {
            get
            {
                return _IsRiskOwner;
            }
            set
            {
                OnIsRiskOwnerChanging(value);
                ReportPropertyChanging("IsRiskOwner");
                _IsRiskOwner = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsRiskOwner");
                OnIsRiskOwnerChanged();
            }
        }
        private global::System.Boolean _IsRiskOwner;
        partial void OnIsRiskOwnerChanging(global::System.Boolean value);
        partial void OnIsRiskOwnerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeptId
        {
            get
            {
                return _DeptId;
            }
            set
            {
                OnDeptIdChanging(value);
                ReportPropertyChanging("DeptId");
                _DeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptId");
                OnDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DeptId;
        partial void OnDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDeptId
        {
            get
            {
                return _SubDeptId;
            }
            set
            {
                OnSubDeptIdChanging(value);
                ReportPropertyChanging("SubDeptId");
                _SubDeptId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDeptId");
                OnSubDeptIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDeptId;
        partial void OnSubDeptIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDeptIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DivisionId
        {
            get
            {
                return _DivisionId;
            }
            set
            {
                OnDivisionIdChanging(value);
                ReportPropertyChanging("DivisionId");
                _DivisionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DivisionId");
                OnDivisionIdChanged();
            }
        }
        private Nullable<global::System.Int32> _DivisionId;
        partial void OnDivisionIdChanging(Nullable<global::System.Int32> value);
        partial void OnDivisionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubDivId
        {
            get
            {
                return _SubDivId;
            }
            set
            {
                OnSubDivIdChanging(value);
                ReportPropertyChanging("SubDivId");
                _SubDivId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubDivId");
                OnSubDivIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubDivId;
        partial void OnSubDivIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubDivIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BranchId
        {
            get
            {
                return _BranchId;
            }
            set
            {
                OnBranchIdChanging(value);
                ReportPropertyChanging("BranchId");
                _BranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BranchId");
                OnBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BranchId;
        partial void OnBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubBranchId
        {
            get
            {
                return _SubBranchId;
            }
            set
            {
                OnSubBranchIdChanging(value);
                ReportPropertyChanging("SubBranchId");
                _SubBranchId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubBranchId");
                OnSubBranchIdChanged();
            }
        }
        private Nullable<global::System.Int32> _SubBranchId;
        partial void OnSubBranchIdChanging(Nullable<global::System.Int32> value);
        partial void OnSubBranchIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> BizUnitId
        {
            get
            {
                return _BizUnitId;
            }
            set
            {
                OnBizUnitIdChanging(value);
                ReportPropertyChanging("BizUnitId");
                _BizUnitId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BizUnitId");
                OnBizUnitIdChanged();
            }
        }
        private Nullable<global::System.Int32> _BizUnitId;
        partial void OnBizUnitIdChanging(Nullable<global::System.Int32> value);
        partial void OnBizUnitIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrgPos
        {
            get
            {
                return _OrgPos;
            }
            set
            {
                OnOrgPosChanging(value);
                ReportPropertyChanging("OrgPos");
                _OrgPos = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrgPos");
                OnOrgPosChanged();
            }
        }
        private global::System.Int32 _OrgPos;
        partial void OnOrgPosChanging(global::System.Int32 value);
        partial void OnOrgPosChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> StsPC
        {
            get
            {
                return _StsPC;
            }
            set
            {
                OnStsPCChanging(value);
                ReportPropertyChanging("StsPC");
                _StsPC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StsPC");
                OnStsPCChanged();
            }
        }
        private Nullable<global::System.Boolean> _StsPC;
        partial void OnStsPCChanging(Nullable<global::System.Boolean> value);
        partial void OnStsPCChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_aspnet_Users", "aspnet_Users")]
        public aspnet_User aspnet_User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("AskrindoMVCModel.FK_UserInfos_aspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("AskrindoMVCModel.FK_UserInfos_aspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_User> aspnet_UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_User>("AskrindoMVCModel.FK_UserInfos_aspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_User>("AskrindoMVCModel.FK_UserInfos_aspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_Depts", "Dept")]
        public Dept Dept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_UserInfos_Depts", "Dept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_UserInfos_Depts", "Dept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dept> DeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dept>("AskrindoMVCModel.FK_UserInfos_Depts", "Dept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dept>("AskrindoMVCModel.FK_UserInfos_Depts", "Dept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskApprovals_UserInfos", "RiskApproval")]
        public EntityCollection<RiskApproval> RiskApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_UserInfos", "RiskApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskApproval>("AskrindoMVCModel.FK_RiskApprovals_UserInfos", "RiskApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_Risks_UserInfos", "Risk")]
        public EntityCollection<Risk> Risks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_UserInfos", "Risk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Risk>("AskrindoMVCModel.FK_Risks_UserInfos", "Risk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_SubDepts", "SubDept")]
        public SubDept SubDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDept>("AskrindoMVCModel.FK_UserInfos_SubDepts", "SubDept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDept>("AskrindoMVCModel.FK_UserInfos_SubDepts", "SubDept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubDept> SubDeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDept>("AskrindoMVCModel.FK_UserInfos_SubDepts", "SubDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubDept>("AskrindoMVCModel.FK_UserInfos_SubDepts", "SubDept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_Divisions", "Division")]
        public Division Division
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_UserInfos_Divisions", "Division").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_UserInfos_Divisions", "Division").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Division> DivisionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Division>("AskrindoMVCModel.FK_UserInfos_Divisions", "Division");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Division>("AskrindoMVCModel.FK_UserInfos_Divisions", "Division", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_SubDivs", "SubDiv")]
        public SubDiv SubDiv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDiv>("AskrindoMVCModel.FK_UserInfos_SubDivs", "SubDiv").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDiv>("AskrindoMVCModel.FK_UserInfos_SubDivs", "SubDiv").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubDiv> SubDivReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubDiv>("AskrindoMVCModel.FK_UserInfos_SubDivs", "SubDiv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubDiv>("AskrindoMVCModel.FK_UserInfos_SubDivs", "SubDiv", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_Branches", "Branch")]
        public Branch Branch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_UserInfos_Branches", "Branch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_UserInfos_Branches", "Branch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Branch> BranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Branch>("AskrindoMVCModel.FK_UserInfos_Branches", "Branch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Branch>("AskrindoMVCModel.FK_UserInfos_Branches", "Branch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_SubBranches", "SubBranch")]
        public SubBranch SubBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubBranch>("AskrindoMVCModel.FK_UserInfos_SubBranches", "SubBranch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubBranch>("AskrindoMVCModel.FK_UserInfos_SubBranches", "SubBranch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SubBranch> SubBranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SubBranch>("AskrindoMVCModel.FK_UserInfos_SubBranches", "SubBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SubBranch>("AskrindoMVCModel.FK_UserInfos_SubBranches", "SubBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_UserInfos_BizUnits", "BizUnit")]
        public BizUnit BizUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BizUnit>("AskrindoMVCModel.FK_UserInfos_BizUnits", "BizUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BizUnit>("AskrindoMVCModel.FK_UserInfos_BizUnits", "BizUnit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BizUnit> BizUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BizUnit>("AskrindoMVCModel.FK_UserInfos_BizUnits", "BizUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BizUnit>("AskrindoMVCModel.FK_UserInfos_BizUnits", "BizUnit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_MitigationApprovals_UserInfos", "MitigationApproval")]
        public EntityCollection<MitigationApproval> MitigationApprovals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MitigationApproval>("AskrindoMVCModel.FK_MitigationApprovals_UserInfos", "MitigationApproval");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MitigationApproval>("AskrindoMVCModel.FK_MitigationApprovals_UserInfos", "MitigationApproval", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AskrindoMVCModel", "FK_RiskMitigations_UserInfos", "RiskMitigation")]
        public EntityCollection<RiskMitigation> RiskMitigations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_UserInfos", "RiskMitigation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RiskMitigation>("AskrindoMVCModel.FK_RiskMitigations_UserInfos", "RiskMitigation", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
